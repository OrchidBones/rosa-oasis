<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MV/MZ项目导至Android端教程</title>
    <link href="/2025/08/27/MV-MZ%E9%A1%B9%E7%9B%AE%E5%AF%BC%E8%87%B3Android%E7%AB%AF%E6%95%99%E7%A8%8B/"/>
    <url>/2025/08/27/MV-MZ%E9%A1%B9%E7%9B%AE%E5%AF%BC%E8%87%B3Android%E7%AB%AF%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="将MV-MZ项目导至Android端-MV-Android-Client-中文手册"><a href="#将MV-MZ项目导至Android端-MV-Android-Client-中文手册" class="headerlink" title="将MV&#x2F;MZ项目导至Android端 - MV Android Client 中文手册"></a>将MV&#x2F;MZ项目导至Android端 - MV Android Client 中文手册</h1><p>*翻译自用</p><br><p>原始教程：<a href="https://forums.rpgmakerweb.com/index.php?threads/exporting-to-android-mv-android-client.84971/">RPG Maker Forum - Exporting to Android (MV Android Client)</a></p><p>注：</p><p>根据<a href="https://forums.rpgmakerweb.com/index.php?threads/how-to-create-an-apk-file-for-rpg-maker-mz-not-mv.147603/post-1275039">该求助帖</a>的内容，本教程也可用于 MZ 项目</p><p>根据<a href="https://forums.rpgmakerweb.com/index.php?threads/exporting-to-android-mv-android-client.84971/page-12#post-947883">该评论</a>的内容，本教程也可用于 VN Maker 项目</p><br><h2 id="MV-Android-Client-是什么"><a href="#MV-Android-Client-是什么" class="headerlink" title="MV Android Client 是什么"></a>MV Android Client 是什么</h2><p>MV Android Client (MV 安卓客户端) 是一个用于 <a href="https://www.android.com/">Android™ 操作系统</a>的进行时客户端，目的是令由游戏开发工具 <a href="http://www.rpgmakerweb.com/">RPG Maker MV</a> 制作而成的游戏在安卓系统上运行。</p><ul><li><p><a href="https://github.com/AltimitSystems/mv-android-client/zipball/master">下载源代码</a></p></li><li><p><a href="https://github.com/AltimitSystems/mv-android-client">在Github上查看</a></p></li></ul><p>本教程使用 MV Android Client 来将 RPG Maker MV 工程编译为安卓可运行的文件（即将工程部署为APK文件）。</p><br><h2 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h2><h3 id="1-MV-Android-Client"><a href="#1-MV-Android-Client" class="headerlink" title="1. MV Android Client"></a>1. MV Android Client</h3><p>从以下链接获取 MV Android Client 源码：</p><p><a href="https://github.com/AltimitSystems/mv-android-client/zipball/master">https://github.com/AltimitSystems/mv-android-client/zipball/master</a></p><p>或使用git克隆Github存储库：</p><p><a href="https://github.com/AltimitSystems/mv-android-client.git">https://github.com/AltimitSystems/mv-android-client.git</a></p><p>下载下来的文件是 MV Android Client 最新版本的zip压缩包。</p><p>请将zip内的文件提取至一个好记的路径（例如电脑桌面）。</p><h3 id="2-开发环境"><a href="#2-开发环境" class="headerlink" title="2. 开发环境"></a>2. 开发环境</h3><p>用于安卓软件开发的官方IDE是谷歌的 <a href="https://developer.android.com/studio/index.html">Android Studio</a>。</p><p>可以在以下链接下载 <a href="https://www.apple.com/macos">macOS</a>, <a href="https://www.microsoft.com/windows">Microsoft Windows</a> 和 <a href="https://www.linuxfoundation.org/projects/linux">Linux</a>版本的 Android Studio ：</p><p><a href="https://developer.android.com/studio/index.html">https://developer.android.com/studio/index.html</a></p><p>对用于不同平台的 Android Studio 安装指引请查询以下链接：</p><p><a href="https://developer.android.com/studio/install.html">https://developer.android.com/studio/install.html</a></p><h3 id="3-安卓-SDK-库"><a href="#3-安卓-SDK-库" class="headerlink" title="3. 安卓 SDK 库"></a>3. 安卓 SDK 库</h3><p>首次打开 Android Studio 时，你会看见一个欢迎窗口，上面显示着当前 Android Studio 的版本和一些用于创建项目的快捷选项。</p><p><img src="/img/BZecW4I.png"></p><p>如果你并不是第一次打开 Android Studio，看到的是先前的项目，那么你可以从 <code>File</code> 菜单关闭当前项目，然后选择 <code>Close Project</code> 以打开欢迎窗口。</p><p>位于欢迎窗口右下角的是 <code>Configure</code> (配置) 菜单。点击这一菜单，然后选择 <code>SDK Manager</code> 就可以打开 Android SDK Manager (安卓 SDK 管理器) 。在这里你可以为你的项目下载所需的安卓 SDK 库。</p><p>在已经打开的项目中，你也可以通过点击 <code>Tools</code> (工具) 菜单，选择子菜单 <code>Android</code> ，然后选择 <code>SDK Manager</code> 来打开安卓 SDK 管理器。</p><h3 id="4-所需的-SDK-平台"><a href="#4-所需的-SDK-平台" class="headerlink" title="4. 所需的 SDK 平台"></a>4. 所需的 SDK 平台</h3><p>安卓 SDK 管理器具有三项栏目：<code>SDK Platforms</code> (SDK 平台), <code>SDK Tools</code> (SDK 工具) 和 <code>SDK Update Sites</code> (SDK 更新站点)。</p><p>为了下载所需的 SDK 平台，请先选中 <code>SDK Platforms</code> 栏目。在这一栏目中，你可以为多种版本的安卓下载开发库。</p><p>通常来说，最好选择下载最新版本的安卓。在本教程编写期间，最新版的安卓是 Android 8.0 (Oreo) 。</p><p>勾选其他需要安装 SDK 的安卓版本左侧的框，随后点击 <code>Apply</code> (应用) 以开始下载所需的 SDK 平台。</p><p><img src="/img/Mdw6LfT.png"></p><h3 id="5-所需的-SDK-工具"><a href="#5-所需的-SDK-工具" class="headerlink" title="5. 所需的 SDK 工具"></a>5. 所需的 SDK 工具</h3><p>下载好 SDK 平台后，选中 <code>SDK Tools</code> (SDK 工具) 栏目来下载用于开发安卓软件的工具。</p><p>在这个列表中，勾选以下 SDK 工具左侧的框：</p><ul><li><p>Android SDK Build-Tools</p></li><li><p>Android SDK Platform-Tools</p></li><li><p>Android SDK Tools</p></li></ul><p>（注：不再需要 Support Repository 了）</p><p><img src="/img/LZB07Kt.png"></p><p>如果你希望在真实的设备上测试软件且使用 Windows 系统，你也需要勾选 <code>Google USB Driver</code>。</p><p>点击 Apply 即可开始下载所需的 SDK 工具。</p><h3 id="6-部署完毕的-RPG-Maker-MV-工程"><a href="#6-部署完毕的-RPG-Maker-MV-工程" class="headerlink" title="6. 部署完毕的 RPG Maker MV 工程"></a>6. 部署完毕的 RPG Maker MV 工程</h3><p>为了使 RPG Maker MV 游戏用于安卓系统，你必须在编辑器中点击 <code>File</code> (文件) 菜单，然后选择 <code>Deployment</code> (部署) 选项。</p><p><img src="/img/y1Hmiy9.png"></p><p>在部署窗口中，选中选项 <code>Android/iOS平台</code> 。你也可以勾选选项 “排除未被使用的文件” 。然而，这可能导致一些依赖外部文件的插件崩溃。</p><p><img src="/img/VDpavLO.png"></p><p>记得选择一个用于部署的输出路径，点击“选择…”选项即可。由于之后你需要找到这个部署完毕的项目，所以请选个好记的路径来部署（例如电脑桌面）。</p><br><h2 id="创建安卓APP"><a href="#创建安卓APP" class="headerlink" title="创建安卓APP"></a>创建安卓APP</h2><h3 id="1-打开-MV-Android-Client"><a href="#1-打开-MV-Android-Client" class="headerlink" title="1. 打开 MV Android Client"></a>1. 打开 MV Android Client</h3><p>在 Android Studio 欢迎界面中，选择 <code>Open an existing Android Studio project</code> (打开现有的AS项目)。</p><p>找到先前在“前置准备”篇章开头已解压的 MV Android Client 源码文件夹。</p><p><img src="/img/HOIDFHk3.png"></p><p>选中该文件夹，使其处于高亮状态，随后点击 OK 。在打开文件夹之后，Android Studio 会花一些时间来构建项目。</p><p>耐心等待项目在 Android Studio 中加载完毕。工程会自动下载额外所需的库，所以在加载项目时需要联网。</p><p><img src="/img/howiDm7.png"></p><p>当一切准备完毕，展开位于最左上角的 <code>Project</code> 栏目，然后展开最左下角的 <code>Build Variants</code> 栏目。</p><p>展开 <code>Project</code> 栏目中的 <code>app</code> 文件夹，里面应该会有 <code>manifests</code> , <code>java</code> 代码和 <code>xml</code> 值。</p><p><code>Build Variants</code> 栏可在 <code>Crosswalk</code> 和 <code>WebView</code> 中任选一项用作默认网络引擎。</p><p>Crosswalk 开发结束于 2017 年 1 月，所以最好使用 WebView 。然而早期版本的设备不一定能完全兼容 WebView 特性。你可以在本教程结尾查看对 Crosswalk 和 WebView 的进一步剖析。</p><h3 id="2-导入部署完毕的-RPG-Maker-MV-工程"><a href="#2-导入部署完毕的-RPG-Maker-MV-工程" class="headerlink" title="2. 导入部署完毕的 RPG Maker MV 工程"></a>2. 导入部署完毕的 RPG Maker MV 工程</h3><h4 id="a-创建资源文件夹"><a href="#a-创建资源文件夹" class="headerlink" title="a. 创建资源文件夹"></a>a. 创建资源文件夹</h4><p>如果在 Android Studio 的 app 文件夹中没有资源文件夹，那么必须创建一个。资源文件夹用于存储部署完毕的 RPG Maker MV 项目。</p><p>右键点击 app 文件夹来打开上下文菜单。打开 New 子菜单，随后打开靠下的 Folder 子菜单，在这里选择 Assets Folder 来创建资源文件夹。</p><p><img src="/img/hDIHOFP.png"></p><p>在出现的窗口上直接点击 OK 即可。</p><p><img src="/img/ctrJ0MF.png"></p><h4 id="b-复制-RPG-Maker-MV-工程"><a href="#b-复制-RPG-Maker-MV-工程" class="headerlink" title="b. 复制 RPG Maker MV 工程"></a>b. 复制 RPG Maker MV 工程</h4><p>找到在前置准备中创建的 RPG Maker MV 工程。目录中应该有一个名为 www 的文件夹。</p><p><img src="/img/mvmzexport11.png"></p><p>选中 www 文件夹使其处于高亮状态，然后右键打开上下文菜单，点击“复制”选项复制该文件夹。</p><p>再次打开 Android Studio ，右键点击 assets 文件夹 (即创建好的资源文件夹) ，通过点击 paste 选项将 www 文件夹复制过来。</p><p><img src="/img/mvmzexport12.png"></p><p>在出现的复制窗口中，不要勾选 Open copy in the editor 选项，这样做是为了防止 MV 工程文件在 Android Studio 中被打开。之后点击 OK 。</p><p><img src="/img/mvmzexport13.png"></p><p>将工程复制到 Android Studio 需要一段时间才能完成，时间长短取决于工程的大小。</p><h3 id="3-修改-applicationId"><a href="#3-修改-applicationId" class="headerlink" title="3. 修改 applicationId"></a>3. 修改 applicationId</h3><p>安卓 applicationId (应用程序ID) 必须是你工程独有的。</p><p>展开 Gradle Scripts 文件夹，之后打开 build.gradle (Module: app) 文件。</p><p><img src="/img/mvmzexport14.png"></p><p>你应该会看见如下图所示的代码。找到 defualtConfig 中写有 applicationId 的那一行。</p><p><img src="/img/mvmzexport15.png"></p><p>将双引号中的文本更改为新的 applicationId 。安卓 applicationId 不能包含空格，必须仅由小写的拉丁字母组成，每个单词之间用英文句号分隔。</p><p>一般情况下，安卓应用程序 ID 由反向的域名和写在ID最后的应用程序名称组成。举个例子：一个运行在 HBGames.org 上，名为 Adventure 的项目的安卓应用程序 ID 将是 org.hbgames.adventure 。</p><p>如果你没有站点域名，你也可以使用你的姓和名。假设一个叫 Harry Potter 的人创建了一个名为 Owl Chronicles 的项目，这个项目的安卓应用程序 ID 将是 potter.harry.owlchronicles 。</p><p>对于你的工程和工作室来说，安卓应用程序 ID 必须是独一无二的。</p><p><img src="/img/mvmzexport16.png"></p><br><h2 id="测试（可选）"><a href="#测试（可选）" class="headerlink" title="测试（可选）"></a>测试（可选）</h2><p>如果你有一台安卓手机，你可以将其连接到电脑以直接测试你的 MV 工程。</p><p>设置手机进行测试的指南可以在以下链接获取到：</p><p><a href="https://developer.android.com/studio/run/device.html">https://developer.android.com/studio/run/device.html</a></p><p>或者，你也可以创建一台安卓虚拟机实例。虚拟机运行在电脑上，不需要使用真实的安卓手机。</p><p>创建虚拟机实例的指南可以在以下链接获取到：</p><p><a href="https://developer.android.com/studio/run/emulator.html">https://developer.android.com/studio/run/emulator.html</a></p><br><h2 id="创建调试用APK"><a href="#创建调试用APK" class="headerlink" title="创建调试用APK"></a>创建调试用APK</h2><p>在 Android Studio 中，选择菜单栏中的 Build 菜单，然后点击 Build APK (构建 APK)。</p><p><img src="/img/mvmzexport17.png"></p><p>该操作将会编译并构建你的应用程序，可能会花费一些时间。构建完成时，你会在左下角看到一条确认消息，其中包含一条指向构建完毕的 APK 的快捷链接。</p><p><img src="/img/mvmzexport18.png"></p><p>构建完毕的 APK 是用于调试的，还不能上架 Google Play 商店。本教程不包括上架发行版 APK 的方法，我们也不会对关于发行版 APK 的问题给予帮助。创建发行版 APK 的相关信息请查阅以下链接：</p><p><a href="https://developer.android.com/studio/publish/index.html">https://developer.android.com/studio/publish/index.html</a></p><br><h2 id="自定义项"><a href="#自定义项" class="headerlink" title="自定义项"></a>自定义项</h2><p>大多数自定义项可以在 values.xml 文件中设置。</p><p><img src="/img/mvmzexport19.png"></p><h3 id="1-APP-名"><a href="#1-APP-名" class="headerlink" title="1. APP 名"></a>1. APP 名</h3><p>若想重命名你的 APP ，请打开 values.xml 文件并找到 app_name 条目。默认情况下，APP 名为 RPG Maker MV 。</p><p>对于非拉丁字母（如中文），必须使用 Unicode 编码。请使用 Unicode 转换器生成编码以在 XML 文件中使用。</p><h3 id="2-APP-网站"><a href="#2-APP-网站" class="headerlink" title="2. APP 网站"></a>2. APP 网站</h3><p>values.xml 中也可以配置 APP 网站。将app_host 条目设为你的站定域名，并将 app_scheme 条目设为 HTTP 或 HTTPS 。举个例子，如果我的网站是 <a href="https://www.hbgames.org/">https://www.hbgames.org</a> ，那么我的 app_scheme 就是 https ，app_host 就是 hbgames.org 。</p><p>之后，我的网站需要与 APP 产生关联。另见以下链接中 Associate your app with your website (将应用与网站相关联) 部分：</p><p><a href="https://developer.android.com/studio/write/app-link-indexing.html">https://developer.android.com/studio/write/app-link-indexing.html</a></p><h3 id="3-APP-图标"><a href="#3-APP-图标" class="headerlink" title="3. APP 图标"></a>3. APP 图标</h3><p>打开 res&#x2F;mipmap 文件夹，你可以看见所有的图标。</p><p><img src="/img/mvmzexport20.png"></p><p>这里准备了多种图标，用于适配不同安卓版本，而不同大小的图标可用来适配不同的设备。</p><p>你可以将所有的默认图标删除，但你必须换上两个新的图标，一个命名为 app_icon ，另一个命名为 app_icon_round 。</p><p>图标可以是 PNG 格式。你也可以通过 Android Studio 创建图标图像，只要右键点击 mipmap 文件夹，打开 New 子菜单后选中 Image Asset 即可。</p><p>关于 Image Asset Studio 的指南可以在以下链接找到：</p><p><a href="https://developer.android.com/studio/write/image-asset-studio.html">https://developer.android.com/studio/write/image-asset-studio.html</a></p><p>记得一定要将两个图标分别命名为  app_icon 和 app_icon_round ！理想情况下，app_icon_round 应该是一个圆形图标。</p><p><img src="/img/mvmzexport21.png"></p><p><img src="/img/mvmzexport22.png"></p><h2 id="Crosswalk-vs-WebView"><a href="#Crosswalk-vs-WebView" class="headerlink" title="Crosswalk vs. WebView"></a>Crosswalk vs. WebView</h2><p>Crosswalk 是英特尔的一个项目，旨在为 Android 创建一个可移植的 WebView 替代方案，该方案可跨多个版本的 Android 运行。<a href="https://crosswalk-project.org/">https://crosswalk-project.org/</a></p><p>你可能从 Intel XDK, Cordova 或 PhoneGap 了解过 Crosswalk 。它也是 RPG Maker MV“官方”的 Android 部署方案的一部分。</p><p>现代 Android 已经将 WebView 组件与操作系统分离，因此旧版本的 Android 现在可以接收 WebView 的关键安全更新，不再需要完整的操作系统更新。这使得 Crosswalk 变得多余，因为 Crosswalk 的主要目标正是为旧版本的 Android 提供 WebView 更新。</p><p>那么，为什么要使用 Crosswalk 呢？因为遗憾的是，WebView 更新还没有为旧设备启用一些功能。也就是说，WebAudio 和 WebGL 可能无法用于旧版的 Android 手机。Crosswalk 可能会对旧版设备实施这些措施，因此使用 Crosswalk 时，兼容性有可能得到提升。</p><p>然而，这并不是一个双赢的局面。WebView 可以在比 Crosswalk 更旧的 Android 版本上工作（可以追溯到Android 3.0 Honeycomb API 11）。对于较新的设备，WebView 甚至可能比 Crosswalk 更快。</p><p>关键的区别在于，Crosswalk 不再处于开发状态，因此它将不会收到安全更新。如果 Crosswalk 中出现了一个漏洞，允许人们通过你的应用程序或游戏黑进设备和破解手机，那么你就倒霉了。有了 WebView ，谷歌的更新将迅速解决这个问题。</p><p>WebView 本身也是 Android 的核心部分。使用 Crosswalk 会增加APK的大小，因为所有潜在版本的 Android 和手机设备的 Crosswalk 库和文件都需要包括在内。</p><p>像我这样有安全意识的开发人员的建议是，应该使用 WebView ，避免使用 Crosswalk 。Crosswalk 的使用风险需自行承担。</p><p>如果未来确实出现了 Crosswalk 的严重安全问题，它将从未来版本的 MV Android Client 中移除。</p><br><h2 id="※-补充功能（来自评论区）"><a href="#※-补充功能（来自评论区）" class="headerlink" title="※ 补充功能（来自评论区）"></a>※ 补充功能（来自评论区）</h2><h3 id="1-将游戏模式从横屏改为竖屏"><a href="#1-将游戏模式从横屏改为竖屏" class="headerlink" title="1. 将游戏模式从横屏改为竖屏"></a>1. 将游戏模式从横屏改为竖屏</h3><p>打开 AndroidManifest.xml ，找到以下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">android:screenOrientation=&quot;sensorLandscape&quot;<br></code></pre></td></tr></table></figure><p>将“sensorLandscape”改为“portrait”即可。</p><h3 id="2-移除退出消息"><a href="#2-移除退出消息" class="headerlink" title="2. 移除退出消息"></a>2. 移除退出消息</h3><p>打开 values.xml ，将退出消息数组清空即可。</p><h3 id="3-在-Android-Studio-中更改-Crosswalk-版本"><a href="#3-在-Android-Studio-中更改-Crosswalk-版本" class="headerlink" title="3. 在 Android Studio 中更改 Crosswalk 版本"></a>3. 在 Android Studio 中更改 Crosswalk 版本</h3><p>（据说如果将 Crosswalk 版本设为 18.48.477.13 就可以解决声音相关的问题）</p><p>打开 build.gradle 文件，找到以下代码：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">zz_crosswalkImplementation</span> <span class="hljs-string">&#x27;org.xwalk:xwalk_core_library:23.53.589.4&#x27;</span><br></code></pre></td></tr></table></figure><p>将其中那一串数字更改成版本号。</p><br><h2 id="※-疑难解答（来自评论区）"><a href="#※-疑难解答（来自评论区）" class="headerlink" title="※ 疑难解答（来自评论区）"></a>※ 疑难解答（来自评论区）</h2><p><strong>Q1：在 Android Studio 中添加 Assets 文件夹时，上下文菜单中没有出现 Assets 文件夹创建选项，怎么办？</strong></p><p>A1：你可以通过电脑操作系统自带的文件浏览器自行添加 Assets 文件夹。记得将文件夹命名为 assets 。同样，你也可以通过操作系统直接将 www 文件夹复制到 Assets 文件夹中。</p><hr><p><strong>Q2：为什么游戏运行在手机上时没有声音？</strong></p><p>A2：可能是因为所使用的设备不支持 Web 音频，也可能因为 Web 音频或所使用的设备不支持游戏使用的音频格式。</p><p><a href="https://developer.android.com/guide/topics/media/media-formats.html">https://developer.android.com/guide/topics/media/media-formats.html</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats">https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats</a></p><p>据某位使用者分享的经历来看，也有可能是 BGM 文件在被复制到 Assets 文件夹时无故被删除了。到时候自行将音乐再添加进去即可。手机上默认使用 .m4a 格式音频。</p><p>还有一种可能，在游戏过程中音频需要时间来加载，有些音频由于加载时间过长，在场景结束后才加载出来，这就导致在场景进行期间没有声音。为了解决这一问题，可以使用预加载器插件预加载音频或其他资源。<br>例如：<a href="https://forums.rpgmakerweb.com/index.php?threads/audiostreaming-js-plugin-to-improve-rpg-maker-mv-audio-performance.110063/">AudioStreaming.js</a></p><hr><p><strong>Q3：用 WebView 打包后在手机上运行游戏时，游戏窗口没有正确绘制，怎么办？</strong></p><p>A3：Windows 版本 Google Chrome v69 或更高版本似乎有一个问题，即 RPG Maker MV 制作的游戏窗口无法正确显示（内容和背景颜色消失）。针对这一问题，日本那边已经有人制作出了补丁插件，可以试试：<a href="https://raw.githubusercontent.com/krmbn0576/rpgmakermv/master/js/plugins/FixWindowDrawing.js">FixWindowDrawing.js</a></p><hr><p><strong>Q4：Android Studio 调控台显示 Failed to resolve: play-services-basement ，怎么办？</strong></p><p>A4：你需要更新 libgoogleplay 中 build.gradle 的 Google Play 库。</p><p>找到以下两行代码：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">implementation</span> &#x27;com.google.android.gms:_play-services-games:<span class="hljs-number">16</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>&#x27;<br></code></pre></td></tr></table></figure><p>修改成以下内容：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">implementation</span> &#x27;com.google.android.gms:_play-services-auth:<span class="hljs-number">16</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>&#x27;<br></code></pre></td></tr></table></figure><hr><p><strong>Q5：在手机上测试时出现以下错误该怎么办？<br>Webpage not available<br>The webpage at file:&#x2F;&#x2F;&#x2F;android_asset&#x2F;www&#x2F;index.html?webgl could not be loaded because<br>net::ERR_FILE_NOT_FOUND</strong></p><p>A5：请将部署好的 MV 项目按照教程放到正确的位置。</p><hr><p><strong>Q6-1：在手机上测试时黑屏，只在左上角出现了一个安卓图标，这是怎么回事？</strong></p><p><strong>Q6-2：打包成功之后看到一条消息：</strong></p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">NOTE :<br>Downloads\AltimitSystems-mv-android-client<span class="hljs-number">-6</span>b33d6f\AltimitSystems-mv-android-client<span class="hljs-number">-6</span>b33d6f\app\src\webview\java\systems\altimit\rpgmakermv\WebPlayerView.javauses <span class="hljs-keyword">or</span> overrides a deprecated API.<br><span class="hljs-name">Note</span>: Recompile with -<span class="hljs-name">Xlint</span>:deprecation <span class="hljs-keyword">for</span> details.<br></code></pre></td></tr></table></figure><p><strong>这是怎么回事？</strong></p><p>A6：出现这个错误是因为你将整个部署好的项目文件夹放进了 Assets 文件夹中。只要将部署好的项目文件夹中的 www 文件夹复制进去就可以了。</p><hr><p><strong>Q7：在手机上测试时弹出错误信息 Failed to load: audio&#x2F;bgm&#x2F;courtesy%20call.m4a ，怎么办？</strong></p><p>A7：Windows 以外的环境通常不允许文件名中包括空格。为了保险起见，建议只使用小写英文字母、-和_来命名文件。</p><hr><p><strong>Q8：在手机上游戏时，每当对角色或敌人产生暴击，游戏就会卡顿，怎么办？</strong></p><p>A8：试着关闭闪烁和色调特效，这些特效可能会使安卓设备超载。</p><hr><p><strong>Q9：输出的调试用 apk 在哪里？</strong></p><p>A9：\AltimitSystems-mv-android-client\app\build\outputs\apk\webview\debug\app-webview-debug.apk</p><p>（译者&amp;整理者：Rosa）</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
      <category>RM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RMMZ</tag>
      
      <tag>代码</tag>
      
      <tag>RMMV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>伤害公式101</title>
    <link href="/2025/08/27/RM%E4%BC%A4%E5%AE%B3%E5%85%AC%E5%BC%8F101/"/>
    <url>/2025/08/27/RM%E4%BC%A4%E5%AE%B3%E5%85%AC%E5%BC%8F101/</url>
    
    <content type="html"><![CDATA[<h1 id="RPG-Maker-伤害公式101"><a href="#RPG-Maker-伤害公式101" class="headerlink" title="RPG Maker - 伤害公式101"></a>RPG Maker - 伤害公式101</h1><p>*翻译自用</p><br><p>原始教程：<a href="https://forums.rpgmakerweb.com/index.php?threads/damage-formulas-101.81905/">RPG Maker Forum - Damage Formula 101</a></p><p>请注意：</p><p>在以下链接指向的帖子中已展开了一场关于伤害公式实例的讨论，因此请将评论和问题直接指向恰当的主题。</p><p><a href="https://forums.rpgmakerweb.com/index.php?threads/rmmv-damage-formula-ideas-and-help.47099/">https://forums.rpgmakerweb.com/index.php?threads/rmmv-damage-formula-ideas-and-help.47099/</a></p><p>事件指令脚本列表链接：</p><p><a href="https://forums.rpgmakerweb.com/index.php?threads/rpg-maker-mv-script-call-list.46456/">https://forums.rpgmakerweb.com/index.php?threads/rpg-maker-mv-script-call-list.46456/</a></p><br><p><strong>伤害公式101</strong></p><p>MV版</p><br><p>你也许想知道如何在敌人具有某种状态时使特定技能对其伤害增大，或如何在玩家具有某种状态时治愈效果增强，或如何精准减少敌人50%的血量。</p><p>上述甚至更多的效果都可以通过自定义伤害公式来实现。</p><br><p><strong>基础</strong>：</p><ul><li><p>**类型(Type)**：设置使用技能&#x2F;物品时伤害、治愈或吸收的是HP还是MP。</p><ul><li><p>无 - 无伤害。</p></li><li><p>HP伤害 - 减少HP</p></li><li><p>MP伤害 - 减少MP</p></li><li><p>HP回复 - 回复HP</p></li><li><p>MP回复 - 回复MP</p></li><li><p>HP吸收 - 减少HP并将减少的量用于回复攻击发出者的HP</p></li><li><p>MP吸收 - 减少MP并将减少的量用于回复攻击发出者的MP</p></li></ul></li><li><p>**元素(Element)**：设置攻击所使用的元素。</p><p>普通攻击 - 元素和武器元素一致。</p></li><li><p>**幅度(Variance)**：伤害量将如何浮动。</p><p>例如，如果技能&#x2F;物品理论上会造成100点伤害，幅度是20%，那么实际造成的伤害值将在80点～120点左右。</p></li><li><p>**能否暴击(Critical)**：能否产生暴击效果。</p><p>暴击效果产生时伤害理论值将是原理论值的300%，幅度不变。</p></li></ul><br><p>现在我们来看看真正有趣的部分——公式！</p><p>公式会决定敌方的伤害量和己方的回复量。</p><br><p>让我们来剖析RPG Maker MV 基础公式之一——火系魔法伤害公式，即 <code>100 + a.mat * 2 - b.mdf * 2</code>。</p><p><strong>a和b代表什么？</strong></p><p>a - 攻击发出者</p><p>b - 攻击对象</p><p><em>所以如果角色格拉西斯对敌人史莱姆释放火系魔法，a指的是格拉西斯，b指的是史莱姆。</em></p><br><p>在上述情境中，伤害量是格拉西斯的 mat (魔法攻击) 的两倍减去史莱姆的mdf (魔法防御) 的两倍再加上100。</p><p>假设格拉西斯有100点魔法攻击，史莱姆有20点魔法防御，代入上述公式后，得 100 + 100 * 2 - 20 * 2，解得对史莱姆的理论伤害量为 260 点。</p><br><p><strong>但是，公式中只有最后一个数字才会被用于计算伤害量。</strong> 如果你有两行公式 (英文分号;会告诉程序在哪里断行)，例如 <code>a.atk; a.atk * 2</code>，只有 <code>a.atk * 2</code> 会被用于计算伤害量。</p><br><p><strong>除了a和b之外，还有其他字母可以用在伤害公式吗？</strong></p><p>有。例如变量。你可以在公式中这样使用变量：v[ID] 。ID 指变量ID。</p><p>所以你可以设置一个伤害量随变量值的增大而增大的技能。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">v</span>[<span class="hljs-number">10</span>] * <span class="hljs-number">2</span> - b.def * <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><br><p><strong>公式还能变得更复杂吗？</strong> 比如在变量值达到100以上时执行更多伤害，这个效果可以做到吗？</p><p>可以。在这种情况下我们可以使用 if else 条件式。</p><p>if else 条件式这样写：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs abnf">if (statement) &#123;<br>    formula1<span class="hljs-comment">;</span><br>&#125; else &#123;<br>    formula2<span class="hljs-comment">;</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>但怎么将条件式写入伤害公式呢？</strong></p><p>可以将整个条件式折叠成一行！</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">statement</span>) &#123; formula1; &#125; <span class="hljs-keyword">else</span> &#123; formula2; &#125;<br></code></pre></td></tr></table></figure><p>例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">if</span> (v[<span class="hljs-number">10</span>] &gt; <span class="hljs-number">100</span>) &#123; a.atk*<span class="hljs-number">4</span> - b.def*<span class="hljs-number">2</span> &#125; else &#123; a.atk*<span class="hljs-number">2</span> - b.def*<span class="hljs-number">2</span> &#125;<br></code></pre></td></tr></table></figure><br><p><strong>如果你的伤害公式只有一行，还可以写得更短。</strong></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs abnf">if (statement)<br>    formula1<span class="hljs-comment">;</span><br>else<br>    formula2<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">if</span> (v[<span class="hljs-number">10</span>] &gt; <span class="hljs-number">100</span>) a.atk*<span class="hljs-number">4</span> - b.def*<span class="hljs-number">2</span>; else a.atk*<span class="hljs-number">2</span> - b.def*<span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure><br><p><strong>使用三元运算符，你甚至可以写得更短</strong>（我最喜欢的一种写法）：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">statement ? formula1 : <span class="hljs-type">formula2</span>;<br></code></pre></td></tr></table></figure><p>例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">v</span>[<span class="hljs-number">10</span>] &gt; <span class="hljs-number">100</span> ? a.atk*<span class="hljs-number">4</span> - b.def*<span class="hljs-number">2</span> : a.atk*<span class="hljs-number">2</span> - b.def*<span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure><br><p><strong>条件运算符</strong>：</p><p>&gt; 大于</p><p>&lt; 小于</p><p>&gt;&#x3D; 大于等于</p><p>&lt;&#x3D; 小于等于</p><p>&#x3D;&#x3D;&#x3D; 全等于</p><p>&amp;&amp; 与</p><p>|| 或</p><p>!&#x3D;&#x3D; 不全等</p><p>! 非</p><br><p>实例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">v</span>[<span class="hljs-number">10</span>] &gt; <span class="hljs-number">100</span> ? <span class="hljs-number">1000</span> : <span class="hljs-number">100</span>;<br></code></pre></td></tr></table></figure><p>: 如果变量#10大于100，造成1000点伤害，否则仅造成100点伤害</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">v</span>[<span class="hljs-number">10</span>] &lt; <span class="hljs-number">100</span> ? <span class="hljs-number">1000</span> : <span class="hljs-number">100</span>; <br></code></pre></td></tr></table></figure><p>: 如果变量#10小于100，造成1000点伤害，否则仅造成100点伤害</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">v</span>[<span class="hljs-number">10</span>] &gt;== <span class="hljs-number">100</span> ? <span class="hljs-number">1000</span> : <span class="hljs-number">100</span>; <br></code></pre></td></tr></table></figure><p>: 如果变量#10大于等于100，造成1000点伤害，否则仅造成100点伤害</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">v</span>[<span class="hljs-number">10</span>] &lt;== <span class="hljs-number">100</span> ? <span class="hljs-number">1000</span> : <span class="hljs-number">100</span>; <br></code></pre></td></tr></table></figure><p>: 如果变量#10小于等于100，造成1000点伤害，否则仅造成100点伤害</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">v</span>[<span class="hljs-number">10</span>] === <span class="hljs-number">100</span> ? <span class="hljs-number">1000</span>: <span class="hljs-number">100</span>; <br></code></pre></td></tr></table></figure><p>: 如果变量#10等于100，造成1000点伤害，否则仅造成100点伤害</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">v</span>[<span class="hljs-number">10</span>] &gt; <span class="hljs-number">50</span> &amp;&amp; v[<span class="hljs-number">11</span>] &gt;== <span class="hljs-number">25</span> ? <span class="hljs-number">1000</span> : <span class="hljs-number">100</span>; <br></code></pre></td></tr></table></figure><p>: 如果变量#10大于50 且 变量#11大于等于25，造成1000点伤害，否则仅造成100点伤害</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">v</span>[<span class="hljs-number">10</span>] &gt; <span class="hljs-number">50</span> || v[<span class="hljs-number">11</span>] &gt; <span class="hljs-number">50</span> ? <span class="hljs-number">1000</span> : <span class="hljs-number">100</span>; <br></code></pre></td></tr></table></figure><p>: 如果变量#10大于50 或 变量#11大于等于50，造成1000点伤害，否则仅造成100点伤害</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">v</span>[<span class="hljs-number">10</span>] !== <span class="hljs-number">100</span> ? <span class="hljs-number">1000</span> : <span class="hljs-number">100</span>; <br></code></pre></td></tr></table></figure><p>: 如果变量#10不等于100，造成1000点伤害，否则仅造成100点伤害</p><br><p><strong>可以用于a和b的参数有哪些？</strong></p><p>以下是完整的列表：</p><br><p>当前 (Current)：(所有统一数字，例如900, 999, 11)</p><br><p>level - 当前等级 (角色只会是默认值)</p><p>hp - 当前 hp</p><p>mp - 当前 mp</p><p>tp - 当前 tp</p><br><p>普通能力值 (Params)：(所有统一数字, e.g.: 1337, 7331, 156)</p><br><p>mhp - 最大 hp</p><p>mmp - 最大 MP</p><p>atk - 攻击</p><p>def - 防御</p><p>mat - 魔法攻击</p><p>mdf - 魔法防御</p><p>agi - 敏捷</p><p>luk - 幸运</p><br><p>额外能力值 (XParams)：(所有表示百分比的十进制数字， 例如 1.0, 0.5, 0.75, 2.44 分别是 100%, 50%, 75%, 244%)</p><br><p>hit - 命中率</p><p>eva - 闪避率</p><p>cri - 暴击率</p><p>cev - 暴击闪避率</p><p>mev - 魔法闪避率</p><p>mrf - 魔法反射率</p><p>cnt - 反击率</p><p>hrg - HP 再生率</p><p>mrg - MP 再生率</p><p>trg - TP 再生率</p><br><p>特殊能力值 (SParams)：(所有表示百分比的十进制数字， 例如 1.0, 0.5, 0.75, 2.44 分别是 100%, 50%, 75%, 244%)</p><br><p>tgr - 目标率</p><p>grd - 防御率</p><p>rec - 回复率</p><p>pha - 药理知识</p><p>mcr - MP 消耗率</p><p>tcr - TP 补充率</p><p>pdr - 物理伤害率</p><p>mdr - 魔法伤害率</p><p>fdr - 地形伤害率</p><p>exr - 经验率</p><br><p><strong>怎么更改HP&#x2F;MP&#x2F;TP值？</strong></p><br><p>gainHp(value) - 回复value大小的HP</p><p>gainMp(value) - 回复value大小的MP</p><p>gainTp(value) - 回复value大小的TP</p><br><p>setHp(hp) - 将HP设为指定值</p><p>setMp(mp) - 将MP设为指定值</p><p>setTp(tp) - 将TP设为指定值</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.setHp</span>(<span class="hljs-selector-tag">a</span>.mhp)<br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.setHp</span>(<span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.hp</span> + <span class="hljs-number">100</span>)<br></code></pre></td></tr></table></figure><br><p>clearTp() - 清除TP</p><br><p><strong>那么有没有高级的写法，能够使状态影响技能的效果呢？</strong></p><p>当然有！以下是所有方法：</p><p>isStateAffected(stateId) - 检查参战人员是否拥有指定ID的状态</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">b</span>.isStateAffected(<span class="hljs-number">10</span>) ? <span class="hljs-number">10000</span> : <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><br><p>isDeathStateAffected() - 检查参战人员是否拥有无法战斗状态</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">b</span>.isDeathStateAffected() ? <span class="hljs-number">10000</span> : <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><br><p>resetStateCounts(stateId) - 刷新参战人员身上指定ID状态的效果时长</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">if</span> (b.isStateAffected(<span class="hljs-number">10</span>)) b.resetStateCounts(<span class="hljs-number">10</span>); <span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><br><p>updateStateTurns() - 将参战人员身上的所有状态的效果时长提前减少一回合</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">b.updateStateTurns()<span class="hljs-comment">; 100</span><br></code></pre></td></tr></table></figure><br><p>addState(stateId) - 给参战人员附加状态</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">if</span> (!b.isStateAffected(<span class="hljs-number">10</span>)) b.addState(<span class="hljs-number">10</span>); <span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><br><p>isStateAddable(stateId) - 检查指定ID的状态能否附加在参战人员身上</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">c</span>=100; <span class="hljs-keyword">if</span> (b.isStateAddable(10)) b.addState(10); <span class="hljs-keyword">else</span> <span class="hljs-attribute">c</span>=4000; c<br></code></pre></td></tr></table></figure><br><p>removeState(stateId) - 从参战人员身上移除状态</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">if</span> (a.isStateAffected(<span class="hljs-number">10</span>)) a.removeState(<span class="hljs-number">10</span>); <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><br><p><strong>那么增益效果呢？我们可以给参战人员附加增&#x2F;减益效果吗？</strong></p><p>可以！</p><p>addBuff(paramId, turns) - 给某个参数添加增益效果</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span>.addBuff(<span class="hljs-number">0</span>, <span class="hljs-number">3</span>); b.def*<span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><br><p>addDebuff(paramId, turns) - 给某个参数添加减益效果</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">b</span>.addDebuff(<span class="hljs-number">2</span>, <span class="hljs-number">10</span>); <span class="hljs-number">9999</span><br></code></pre></td></tr></table></figure><br><p>removeBuff(paramId) - 从参战人员身上移除一个增&#x2F;减益效果</p><p>removeAllBuffs() - 从参战人员身上移除所有增&#x2F;减益效果</p><br><p>**参数ID(paramId)**：</p><br><p>0 - 最大 HP</p><p>1 - 最大 MP</p><p>2 - 攻击</p><p>3 - 防御</p><p>4 - 魔法攻击</p><p>5 - 魔法防御</p><p>6 - 敏捷</p><p>7 - 幸运</p><br><p><strong>参战人员相关的常见函数</strong>：</p><br><p>die() - 杀死参战人员 (使参战人员无法战斗)</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">b.die()<span class="hljs-comment">; 0</span><br></code></pre></td></tr></table></figure><br><p>revive() - 复活参战人员 (移除无法战斗状态)</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">a.revive()<span class="hljs-comment">; 1000</span><br></code></pre></td></tr></table></figure><br><p>paramBase(paramId) - 获取基础能力值</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span>.paramBase(<span class="hljs-number">3</span>)*<span class="hljs-number">10</span> - b.def*<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><br><p>paramPlus(paramId) - 获取额外能力值</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span>.paramPlus(<span class="hljs-number">3</span>)*<span class="hljs-number">2</span> - b.def*<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><br><p>paramMax(paramId) - 获取最大能力值</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.paramMax</span>(<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><br><p>elementRate(elementId) - 检查参战人员的元素率 (代表百分比的十进制数字)</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">b</span>.elementRate(<span class="hljs-number">10</span>) &gt;== <span class="hljs-number">0</span>.<span class="hljs-number">5</span> ? <span class="hljs-number">10000</span> : a.mat*<span class="hljs-number">4</span>;<br></code></pre></td></tr></table></figure><br><p>isStateResist(stateId) - 检查参战人员对指定ID的状态具有抗性</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">c</span>=<span class="hljs-number">0</span>; b.isStateResist(<span class="hljs-number">10</span>) ? c+=<span class="hljs-number">2000</span> : b.addState(<span class="hljs-number">10</span>); c<br></code></pre></td></tr></table></figure><br><p>isSkillTypeSealed(stypeId) - 检查指定ID的技能类型是否被封印</p><p>isSkillSealed(skillId) - 检查参战人员指定ID的技能是否被封印</p><p>isEquipTypeSealed(etypeId) - 检查指定ID的装备类型是否被封印</p><p>isDualWield() - 检查参战人员是否可以双持武器</p><p>isGuard() - 检查参战人员是否正在防御</p><p>recoverAll() - 移除所有状态并将HP和MP恢复到最大值</p><br><p>hpRate() - 检查参战人员的HP率</p><p>mpRate() - 检查参战人员的MP率</p><p>tpRate() - 检查参战人员的TP率</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">b</span>.hpRate() &lt; <span class="hljs-number">0</span>.<span class="hljs-number">5</span> ? b.hp-<span class="hljs-number">1</span> : <span class="hljs-number">100</span>;<br></code></pre></td></tr></table></figure><br><p>isActor() - 检查参战人员是否为角色</p><p>isEnemy() - 检查参战人员是否为敌人</p><p>escape() - 使参战人员逃跑</p><p>b.escape() (使敌人逃跑)</p><br><p>consumeItem(item) - 消耗一个物品</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span>.consumeItem($dataItems[<span class="hljs-number">15</span>]); <span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><br><p>仅用于角色：</p><br><p>currentExp() - 当前 EXP</p><p>currentLevelExp() - 当前等级总共所需的EXP</p><p>nextLevelExp() - 下一等级总共所需的EXP</p><p>nextRequiredExp() - 从当前等级升到下一等级所需的EXP</p><p>maxLevel() - 角色最大等级</p><p>isMaxlevel() - 角色是否已达最大等级 (true&#x2F;false)</p><p>hasWeapon() - 角色是否手持武器 (true&#x2F;false)</p><p>hasArmor() - 角色是否佩戴装备 (true&#x2F;false)</p><p>clearEquipments() - 卸下角色佩戴的所有装备</p><p>isClass(gameClass) - 角色是否是某一职业<br>(gameClass - $dataClasses[ID])</p><p>hasNoWeapons() - 检查角色是否没有任何武器</p><p>levelUp() - 使角色升一级</p><p>levelDown() - 使角色降一级</p><p>gainExp(exp) - 给予角色指定数量的 EXP</p><p>learnSkill(skillId) - 使角色习得指定ID的技能</p><p>forgetSkill(skillId) - 使角色遗忘指定ID的技能</p><p>isLearnedSkill(skillId) - 检查角色是否已经习得了指定ID的技能</p><p>actorId() - 返回角色的ID</p><br><p>仅用于敌人：</p><br><p>enemyId() - 返回敌人的ID</p><br><p><strong>数学运算呢？在公式中也可以使用数学运算方式吗？</strong></p><p>嗯，完全可以。</p><p>Math.random() - 返回0～1之间的一个随机数 (0 &lt;&#x3D; n &lt; 1)</p><p>Math.min(numbers) - 返回传入的所有数字中最小的一个数</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Math</span>.min(<span class="hljs-number">10</span>, <span class="hljs-number">50</span>, <span class="hljs-number">40</span>, <span class="hljs-number">200</span>) /*会返回<span class="hljs-number">10</span>。*/<br></code></pre></td></tr></table></figure><br><p>Math.max(numbers) - 返回传入的所有数字中最大的一个数</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Math</span>.max(<span class="hljs-number">10</span>, <span class="hljs-number">50</span>, <span class="hljs-number">40</span>, <span class="hljs-number">200</span>) /*会返回<span class="hljs-number">200</span>。*/<br></code></pre></td></tr></table></figure><br><p>Math.round(number) - 将数字四舍五入到最近的整数</p><p>Math.ceil(number) - 将数字五入到最近的整数</p><p>Math.floor(number) - 将数字四舍到最近的整数</p><br><p><strong>Math.random() 返回的是0～1之间的数，那我们可以取到 1～100 或 5～200 之间的数吗？</strong></p><br><p>没问题：</p><br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Math</span>.floor(Math.random()*<span class="hljs-number">100</span>)+<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>这样写就可以返回 1～100 之间的数。如果我们不在末尾+1，就只能返回 0～99 之间的数。</p><br><p><strong>但这样写会很占地方吧？我们可以简化一下吗？</strong></p><br><p>值得庆幸的是，在 rpg_core.js 中定义了一个方法：Math.randomInt(max);</p><p>所以我们还可以这样写：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Math</span>.randomInt(<span class="hljs-number">100</span>)+<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
      <category>RM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RMMZ</tag>
      
      <tag>代码</tag>
      
      <tag>RMMV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>蓝光BDMV转4K MKV自存教程</title>
    <link href="/2025/08/27/%E8%93%9D%E5%85%89BDMV%E8%BD%AC4K-MKV%E8%87%AA%E5%AD%98%E6%95%99%E7%A8%8B/"/>
    <url>/2025/08/27/%E8%93%9D%E5%85%89BDMV%E8%BD%AC4K-MKV%E8%87%AA%E5%AD%98%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>蓝光BDMV转4K MKV</p><ol><li><p>在<a href="https://mkvtoolnix.download/downloads.html">官网</a>上下载MkvToolNix软件，或者通过360软件助手下载；</p></li><li><p>打开软件，点击“添加输入文件”；</p></li><li><p>选择BDMV文件夹里的 <code>index.bdmv</code>；</p></li><li><p>等加载完毕后点击“开始混流”。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
      <category>音视频</category>
      
    </categories>
    
    
    <tags>
      
      <tag>视频</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自存特殊艺术字符</title>
    <link href="/2025/08/27/%E8%87%AA%E5%AD%98%E7%89%B9%E6%AE%8A%E8%89%BA%E6%9C%AF%E5%AD%97%E7%AC%A6/"/>
    <url>/2025/08/27/%E8%87%AA%E5%AD%98%E7%89%B9%E6%AE%8A%E8%89%BA%E6%9C%AF%E5%AD%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="特殊艺术字符"><a href="#特殊艺术字符" class="headerlink" title="特殊艺术字符"></a>特殊艺术字符</h1><h3 id="颠倒字"><a href="#颠倒字" class="headerlink" title="颠倒字"></a>颠倒字</h3><p>ɐqɔpǝɟƃɥᴉſ̣ʞןɯuodbɹsʇnʌʍxʎz</p><p>∀ᗺƆᗡƎℲ⅁HIſʞႨWNOԀÒଧS⊥∩ΛMX⅄Z</p><p>˙ʻ¡¿ˌ</p><p>ƖՇƐh૬9L860</p><br><h3 id="右下标"><a href="#右下标" class="headerlink" title="右下标"></a>右下标</h3><p>₀₁₂₃₄₅₆₇₈₉₊₋₌₍₎ₐₑₒₓₔ</p><br><h3 id="右上标"><a href="#右上标" class="headerlink" title="右上标"></a>右上标</h3><p>⁰¹²³⁴⁵⁶⁷⁸⁹ⁱ⁺⁻⁼⁽⁾ⁿ</p><br><h3 id="彩色字"><a href="#彩色字" class="headerlink" title="彩色字"></a>彩色字</h3><p>🇦 🇧 🇨 🇩 🇪 🇫 🇬 🇭 🇮 🇯 🇰 🇱 🇲 🇳 🇴 🇵 🇶 🇷 🇸 🇹 🇺 🇻 🇼 🇽 🇾 🇿 </p><br><h3 id="花体字"><a href="#花体字" class="headerlink" title="花体字"></a>花体字</h3><p>1</p><p>𝔞𝔟𝔠𝔡𝔢𝔣𝔤𝔥𝔦𝔧𝔨𝔩𝔪𝔫𝔬𝔭𝔮𝔯𝔰𝔱𝔲𝔳𝔴𝔵𝔶𝔷𝔄𝔅ℭ𝔇𝔈𝔉𝔊ℌℑ𝔍𝔎𝔏𝔐𝔑𝔒𝔓𝔔ℜ𝔖𝔗𝔘𝔙𝔚𝔛𝔜ℨ</p><p>2</p><p>𝖆𝖇𝖈𝖉𝖊𝖋𝖌𝖍𝖎𝖏𝖐𝖑𝖒𝖓𝖔𝖕𝖖𝖗𝖘𝖙𝖚𝖛𝖜𝖝𝖞𝖟𝕬𝕭𝕮𝕯𝕰𝕱𝕲𝕳𝕴𝕵𝕶𝕷𝕸𝕹𝕺𝕻𝕼𝕽𝕾𝕿𝖀𝖁𝖂𝖃𝖄𝖅</p><p>3</p><p>𝓪𝓫𝓬𝓭𝓮𝓯𝓰𝓱𝓲𝓳𝓴𝓵𝓶𝓷𝓸𝓹𝓺𝓻𝓼𝓽𝓾𝓿𝔀𝔁𝔂𝔃𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩</p><p>4</p><p>𝒶𝒷𝒸𝒹𝑒𝒻𝑔𝒽𝒾𝒿𝓀𝓁𝓂𝓃𝑜𝓅𝓆𝓇𝓈𝓉𝓊𝓋𝓌𝓍𝓎𝓏𝒜𝐵𝒞𝒟𝐸𝐹𝒢𝐻𝐼𝒥𝒦𝐿𝑀𝒩𝒪𝒫𝒬𝑅𝒮𝒯𝒰𝒱𝒲𝒳𝒴𝒵</p><p>5</p><p>𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙𝕚𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫𝔸𝔹ℂ𝔻𝔼𝔽𝔾ℍ𝕀𝕁𝕂𝕃𝕄ℕ𝕆ℙℚℝ𝕊𝕋𝕌𝕍𝕎𝕏𝕐ℤ𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡𝟘</p><p>6</p><p>ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ１２３４５６７８９０</p><p>7</p><p>ᴀʙᴄᴅᴇꜰɢʜɪᴊᴋʟᴍɴᴏᴘQʀꜱᴛᴜᴠᴡxʏᴢ</p><p>8</p><p>🄰🄱🄲🄳🄴🄵🄶🄷🄸🄹🄺🄻🄼🄽🄾🄿🅀🅁🅂🅃🅄🅅🅆🅇🅈🅉</p><p>9</p><p>🅰🅱🅲🅳🅴🅵🅶🅷🅸🅹🅺🅻🅼🅽🅾🅿🆀🆁🆂🆃🆄🆅🆆🆇🆈🆉</p><p>10</p><p>ᵃᵇᶜᵈᵉᶠᵍʰⁱʲᵏˡᵐⁿᵒᵖqʳˢᵗᵘᵛʷˣʸᶻᴬᴮᶜᴰᴱᶠᴳᴴᴵᴶᴷᴸᴹᴺᴼᴾQᴿˢᵀᵁⱽᵂˣʸᶻ</p><p>11</p><p>ⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏ①②③④⑤⑥⑦⑧⑨⓪</p><p>12</p><p>𝐚𝐛𝐜𝐝𝐞𝐟𝐠𝐡𝐢𝐣𝐤𝐥𝐦𝐧𝐨𝐩𝐪𝐫𝐬𝐭𝐮𝐯𝐰𝐱𝐲𝐳𝐀𝐁𝐂𝐃𝐄𝐅𝐆𝐇𝐈𝐉𝐊𝐋𝐌𝐍𝐎𝐏𝐐𝐑𝐒𝐓𝐔𝐕𝐖𝐗𝐘𝐙𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎</p><p>13</p><p>𝗮𝗯𝗰𝗱𝗲𝗳𝗴𝗵𝗶𝗷𝗸𝗹𝗺𝗻𝗼𝗽𝗾𝗿𝘀𝘁𝘂𝘃𝘄𝘅𝘆𝘇𝗔𝗕𝗖𝗗𝗘𝗙𝗚𝗛𝗜𝗝𝗞𝗟𝗠𝗡𝗢𝗣𝗤𝗥𝗦𝗧𝗨𝗩𝗪𝗫𝗬𝗭𝟭𝟮𝟯𝟰𝟱𝟲𝟳𝟴𝟵𝟬</p><p>14</p><p>𝘢𝘣𝘤𝘥𝘦𝘧𝘨𝘩𝘪𝘫𝘬𝘭𝘮𝘯𝘰𝘱𝘲𝘳𝘴𝘵𝘶𝘷𝘸𝘹𝘺𝘻𝘈𝘉𝘊𝘋𝘌𝘍𝘎𝘏𝘐𝘑𝘒𝘓𝘔𝘕𝘖𝘗𝘘𝘙𝘚𝘛𝘜𝘝𝘞𝘟𝘠𝘡</p><p>15</p><p>𝙖𝙗𝙘𝙙𝙚𝙛𝙜𝙝𝙞𝙟𝙠𝙡𝙢𝙣𝙤𝙥𝙦𝙧𝙨𝙩𝙪𝙫𝙬𝙭𝙮𝙯𝘼𝘽𝘾𝘿𝙀𝙁𝙂𝙃𝙄𝙅𝙆𝙇𝙈𝙉𝙊𝙋𝙌𝙍𝙎𝙏𝙐𝙑𝙒𝙓𝙔𝙕</p><p>16</p><p>𝒂𝒃𝒄𝒅𝒆𝒇𝒈𝒉𝒊𝒋𝒌𝒍𝒎𝒏𝒐𝒑𝒒𝒓𝒔𝒕𝒖𝒗𝒘𝒙𝒚𝒛𝑨𝑩𝑪𝑫𝑬𝑭𝑮𝑯𝑰𝑱𝑲𝑳𝑴𝑵𝑶𝑷𝑸𝑹𝑺𝑻𝑼𝑽𝑾𝑿𝒀𝒁</p><p>17</p><p>𝚊𝚋𝚌𝚍𝚎𝚏𝚐𝚑𝚒𝚓𝚔𝚕𝚖𝚗𝚘𝚙𝚚𝚛𝚜𝚝𝚞𝚟𝚠𝚡𝚢𝚣𝙰𝙱𝙲𝙳𝙴𝙵𝙶𝙷𝙸𝙹𝙺𝙻𝙼𝙽𝙾𝙿𝚀𝚁𝚂𝚃𝚄𝚅𝚆𝚇𝚈𝚉𝟷𝟸𝟹𝟺𝟻𝟼𝟽𝟾𝟿𝟶</p><p>18</p><p>❶❷❸❹❺❻❼❽❾<br>⓵⓶⓷⓸⓹⓺⓻⓼⓽</p><br><h3 id="拼音声调"><a href="#拼音声调" class="headerlink" title="拼音声调"></a>拼音声调</h3><p>āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜńň</p><br><h3 id="色块"><a href="#色块" class="headerlink" title="色块"></a>色块</h3><p>ˍ＿▁▂▃▄▅▆▇█▉▊▋▌▍▎▏<br>◤◥◣◢</p><br><h3 id="对错"><a href="#对错" class="headerlink" title="对错"></a>对错</h3><p>☑✓✔√</p><p>☒✗✘✕</p><br><h3 id="古埃及象形文字"><a href="#古埃及象形文字" class="headerlink" title="古埃及象形文字"></a>古埃及象形文字</h3><p>𓀀𓀁𓀂𓀃𓀄𓀅𓀆𓀇𓀈𓀉𓀊𓀋𓀌𓀍𓀎𓀏𓀐𓀑𓀒𓀓𓀔𓀕𓀖𓀗𓀘𓀙𓀚𓀛𓀜𓀝𓀞𓀟𓀠𓀡𓀢𓀣𓀤𓀥𓀃𓀄𓀅𓀆𓀇𓀈𓀉𓀊𓀋𓀌𓀍𓀎𓀏𓀐𓀑𓀒𓀓𓀔𓀕𓀖𓀗𓀘𓀙𓀚𓀛𓀜𓀝𓀞𓀟𓀠𓀡𓀢𓀣𓀤𓀥𓀃𓀄𓀅𓀆𓀇𓀈𓀉𓀊𓀋𓀌𓀍𓀎𓀏𓀐𓀑𓀒𓀓𓀔𓀕𓀖𓀗𓀘𓀙𓀚𓀛𓀜𓀝</p>]]></content>
    
    
    <categories>
      
      <category>存档</category>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python安装+运行</title>
    <link href="/2025/08/27/Python%E5%AE%89%E8%A3%85-%E8%BF%90%E8%A1%8C%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/"/>
    <url>/2025/08/27/Python%E5%AE%89%E8%A3%85-%E8%BF%90%E8%A1%8C%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Python安装-运行简易教程"><a href="#Python安装-运行简易教程" class="headerlink" title="Python安装+运行简易教程"></a>Python安装+运行简易教程</h1><p>在Windows系统上安装 Python 3 并在 VS Code 终端运行教程</p><p>仅面向外行人或只想用Python处理简单任务的人（比如我）。</p><p>请先提前安装好 VS Code。安装包可以在<a href="https://code.visualstudio.com/">官网</a>下载。安装后记得安装简体中文的扩展插件。</p><br><h2 id="一、下载并安装Python3"><a href="#一、下载并安装Python3" class="headerlink" title="一、下载并安装Python3"></a>一、下载并安装Python3</h2><ol><li><p>下载安装包。</p><p> 访问<a href="https://www.python.org/downloads/">官网</a>并下载适用于电脑系统的最新版本的 Python 3 安装包（一般情况下下载 64-Bit 的版本即可）；</p></li><li><p>点击安装包开始安装。</p><p> 在弹出的安装窗口的第一页，勾选最下方的“Add Python 3.x to PATH”，然后选择“Install Now”进行下一步安装。</p><p> 按部就班完成接下来的安装步骤之后，等待 Python 安装完成。</p></li><li><p>测试 Python 是否已经成功安装。</p><p> 按Win+R，输入cmd调出命令提示符，然后输入“python”，按回车。如果能够看到Python的相关信息（版本等），则说明安装成功。</p></li></ol><br><h2 id="二、设置环境变量"><a href="#二、设置环境变量" class="headerlink" title="二、设置环境变量"></a>二、设置环境变量</h2><p>调出命令提示符，输入：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">path</span><span class="hljs-operator">=</span>%path%<span class="hljs-comment">;[PATH]</span><br></code></pre></td></tr></table></figure><p>[PATH] 是 Python 的安装目录。</p><p>例如：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">path</span><span class="hljs-operator">=</span>%path%<span class="hljs-comment">;C:\Python</span><br></code></pre></td></tr></table></figure><br><h2 id="三、配置-VS-Code"><a href="#三、配置-VS-Code" class="headerlink" title="三、配置 VS Code"></a>三、配置 VS Code</h2><ol><li><p>安装 Python 对应的扩展插件。</p><p>在 VS Code 左侧边栏选择“扩展”，搜索、下载并启用 Python、Pylance、Python Debugger、Python Environments 四个插件。</p></li><li><p>设置解释器。</p><p>在上侧工具栏里选择“文件（Files）”，再选“打开文件夹（Open a Folder…）”，随意选择一个文件夹（可以是桌面），然后新建一个 .py 文件。按 Ctrl+Shift+P 调出命令面板，搜索 “Select Interpreter”，选中，然后选择“Python 3.x.x”（一般位于最后一个）。</p></li></ol><br><h2 id="四、在终端运行-Python"><a href="#四、在终端运行-Python" class="headerlink" title="四、在终端运行 Python"></a>四、在终端运行 Python</h2><p>写好 Python 代码后，右键调出快捷菜单，鼠标移到“运行 Python（Run Python）”，然后点击“在终端中运行 Python（Run Python in terminal）”即可。</p><br><p>这样就可以方便地处理任务了。</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>代码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>碎碎念-2</title>
    <link href="/2025/08/27/%E7%A2%8E%E7%A2%8E%E5%BF%B5-2/"/>
    <url>/2025/08/27/%E7%A2%8E%E7%A2%8E%E5%BF%B5-2/</url>
    
    <content type="html"><![CDATA[<p>这两天把之前的一些存档都发上来了，不得不说Hexo+Github+Netlify简直是神中神。</p><p>回头打算摸索一下Hexo的其他功能，再倒腾一下网站。</p><p>感觉自己有好多事都想去做，但又挤不出时间（捂脸</p><p>之后就要忙起来了，不知道这个站点还顾不顾得上。每次更新网站都得commit到Github上面，但在现在这个IP不用梯子几乎是不可能稳定连接到Github的。难道真的要一直给梯子续费吗。。。现在这个梯子虽然稳定但是三个月要75，还是挺贵的。。。</p><p>说起来我嗑CP的时候好像接受度还挺高的，嗑过的很多CP都可以接受左右位互换。但是感觉自从2014年我第一次进同人圈到现在，圈里风气大不如前了（尤其是以2020年227事件为节点），现在很多同人女都倾向于混圈子、拉帮结派、党争之类的，喜欢贴标签，各种黑话缩写层出不穷，一些小众圈子很容易受到追捧和流量冲击，二十多岁同人女都能成为大龄同人女，嗑CP大多数走模板（尤其烫圈、热圈美帝），总之就是乱之又乱，圈子也越来越倾向闭塞……已老实成为不混圈同人女。</p><p>不过说真的，月L我是真的嗑不了逆家，之前刚看完动漫感觉月生来就是该做Dom的，艾露其实也很Dom但是很遗憾略逊月一踌，当时秉承着Dom也能做Uke的心态看过逆家文，我嘞个豆，把L描绘成阴暗男鬼把月泥塑成娇妻是在闹哪样？？？OOC到没边了已经。很多逆家文都没有解决月怎么会任由自己屈居别人下面，尤其是屈居艾露下面这个问题，他明明有很大男子主义的一面，而且非常幼稚、自负，感觉在同性恋关系里会是很在意体位的人（这也是为什么两位主角的互攻文不少）……而且艾露虽然对月展现出了强烈的好奇心和欲望，但是这种强烈感情很明显只在探案层面，不涉及性啊……怎么把他塑造得像个发情野兽强奸犯一样……他更多只是对解决Kira案件感兴趣，对Kira是月，月是Kira感兴趣，把月抓到手可能会像猫把玩老鼠一样孩子气地戏弄他，但戏弄他的手段绝对不可能包括侵犯的……算了不回忆了一回忆就难受。虽然月L里面也有OOC的饭但是比逆家好很多TT不仅粮多而且圈子不冷不热，环境很不错，更何况本子也多，幸福。</p>]]></content>
    
    
    
    <tags>
      
      <tag>同人</tag>
      
      <tag>杂项</tag>
      
      <tag>碎碎念</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HonKit生成电子书</title>
    <link href="/2025/08/27/HonKit%E7%94%9F%E6%88%90%E7%94%B5%E5%AD%90%E4%B9%A6%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/"/>
    <url>/2025/08/27/HonKit%E7%94%9F%E6%88%90%E7%94%B5%E5%AD%90%E4%B9%A6%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="HonKit生成电子书简易教程"><a href="#HonKit生成电子书简易教程" class="headerlink" title="HonKit生成电子书简易教程"></a>HonKit生成电子书简易教程</h1><p>官方文档：<a href="https://honkit.netlify.app/">https://honkit.netlify.app</a></p><br><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>HonKit 是一个命令行工具，可将 markdown 文件编译成带目录的电子书并将其导出为 html, pdf, epub, mobi 格式。</p><p>HonKit 是 gitbook 的升级版本。介于 gitbook 已不再维护，gitbook 不支持高版本的 NodeJS。然而，HonKit 兼容最新版本的 NodeJS LTS，可以很好地替代 gitbook 工作。</p><br><h2 id="2-安装HonKit"><a href="#2-安装HonKit" class="headerlink" title="2. 安装HonKit"></a>2. 安装HonKit</h2><p>进入NodeJS官网 <a href="https://nodejs.org/">https://nodejs.org/</a> 下载 NodeJS LTS 并安装。（建议安装版本 10.0.0 以上）</p><p>然后，使用Node.js自带的NPM工具安装HonKit。在命令控制符&#x2F;终端窗口输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install -g honkit --save-dev<br></code></pre></td></tr></table></figure><p>对于之后添加的插件，我们也需要使用 -g 安装到全局。</p><br><h2 id="3-创建一个新电子书项目"><a href="#3-创建一个新电子书项目" class="headerlink" title="3. 创建一个新电子书项目"></a>3. 创建一个新电子书项目</h2><p>在命令控制符&#x2F;终端窗口输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npx honkit init &#123;DIRECTORY&#125; <br></code></pre></td></tr></table></figure><p>{DIRECTORY}是项目所在的文件夹绝对路径。</p><p>构建完毕后打开项目文件夹，就会出现 <code>SUMMARY.md</code> 和 <code>README.md</code> 两个文件。</p><ul><li><p><strong>项目文件结构</strong></p><p>项目中必须拥有 <code>SUMMARY.md</code>, <code>README.md</code> 和 <code>book.json</code>。</p><p><code>SUMMARY.md</code> 存放电子书的目录结构，按无序列表排列。</p><p><code>README.md</code> 记录电子书封面显示的内容。</p><p><code>book.json</code> 可为电子书进行配置。</p><p>除此以外还可创建一个 <code>GLOSSARY.md</code> 文件，用来存放术语。</p><p>若电子书有多种语言版本，可以创建一个 <code>LANGS.md</code> 文件，用来配置多语言设置。</p><p>关于电子书配置选项及书写格式的详细内容，参见<a href="https://honkit.netlify.app/structure.html">官方文档</a>或见下简短说明。</p></li></ul><br><h2 id="4-设置-撰写电子书内容"><a href="#4-设置-撰写电子书内容" class="headerlink" title="4. 设置&amp;撰写电子书内容"></a>4. 设置&amp;撰写电子书内容</h2><p>a. <strong>设置电子书属性</strong></p><p>在项目文件夹里新建一个 <code>book.json</code> 文件。</p><p>内容这样写：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;我的电子书标题&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;author&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;作者名&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是这本电子书的描述。&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>除了上面三个参数之外，还有其他参数可设置。详情参见<a href="https://honkit.netlify.app/config">官方文档 - Configuration</a>。</p><p>b. <strong>撰写电子书&amp;设置目录</strong></p><p>下载一个 Markdown 文件编辑器，然后新建.md文件，在文件里编辑电子书的内容。</p><p>可以将电子书根据章节拆分出多个文件。</p><p>随后，将这些文件放入我们的项目文件夹里。可以放在不同文件夹里用来分类。</p><p>对于电子书的目录、各章节的配置和格式，可参见<a href="https://honkit.netlify.app/pages">官方文档 - Pages and Summary</a>。</p><br><h2 id="5-预览电子书"><a href="#5-预览电子书" class="headerlink" title="5. 预览电子书"></a>5. 预览电子书</h2><p>在命令控制符&#x2F;终端窗口输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npx honkit serve &#123;DIRECTORY&#125; <br></code></pre></td></tr></table></figure><p><code>&#123;DIRECTORY&#125;</code> 是项目文件夹绝对路径。</p><p>等待加载完成后打开 <a href="http://localhost:4000/">http://localhost:4000</a> 即可预览静态网页。</p><br><h2 id="5-生成电子书"><a href="#5-生成电子书" class="headerlink" title="5. 生成电子书"></a>5. 生成电子书</h2><p>在命令控制符&#x2F;终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npx honkit build &#123;DIRECTORY&#125; <br></code></pre></td></tr></table></figure><p>{DIRECTORY}是项目文件夹绝对路径，即可生成配套的 html 静态网页。</p><p>除此以外，还可以生成 pdf, epub, mobi 文件：</p><ul><li><p>生成 PDF 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ honkit pdf ./ ./mybook.pdf<br></code></pre></td></tr></table></figure></li><li><p>生成 ePub 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ honkit epub ./ ./mybook.epub<br></code></pre></td></tr></table></figure></li><li><p>生成 Mobi 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ honkit mobi ./ ./mybook.mobi<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作</tag>
      
      <tag>阅读</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>欧美同人术语英中对照表</title>
    <link href="/2025/08/27/%E6%AC%A7%E7%BE%8E%E5%90%8C%E4%BA%BA%E6%9C%AF%E8%AF%AD%E5%AF%B9%E7%85%A7%E8%A1%A8/"/>
    <url>/2025/08/27/%E6%AC%A7%E7%BE%8E%E5%90%8C%E4%BA%BA%E6%9C%AF%E8%AF%AD%E5%AF%B9%E7%85%A7%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="欧美同人术语英中对照表"><a href="#欧美同人术语英中对照表" class="headerlink" title="欧美同人术语英中对照表"></a>欧美同人术语英中对照表</h1><p>用浏览器的搜索功能查找。</p><p>末尾附部分术语的解释说明。</p><h2 id="1-通用篇"><a href="#1-通用篇" class="headerlink" title="1. 通用篇"></a>1. 通用篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Fandom</td><td>同人圈</td></tr><tr><td>Fanart</td><td>同人图</td></tr><tr><td>Fanfic</td><td>同人文</td></tr><tr><td>BroTP</td><td>CB</td></tr><tr><td>Ship (n.)</td><td>CP</td></tr><tr><td>Ship (v.)</td><td>磕（CP）</td></tr><tr><td>Shipper</td><td>CP粉</td></tr><tr><td>Antishipper</td><td>CP小警察</td></tr><tr><td>OTP</td><td>本命CP</td></tr><tr><td>Rarepair</td><td>冷门CP</td></tr><tr><td>Ship War</td><td>掐CP</td></tr><tr><td>Sailed (Ship)</td><td>官配</td></tr><tr><td>Sunk (Ship)</td><td>变得难磕的（CP）</td></tr><tr><td>AU</td><td>世界观；平行世界</td></tr><tr><td>xxx Paro</td><td>xxx 梗</td></tr><tr><td>OC</td><td>原创角色</td></tr><tr><td>Tribe</td><td>设定</td></tr><tr><td>Kink</td><td>性癖</td></tr><tr><td>Doujinshi</td><td>同人志</td></tr><tr><td>Manga</td><td>漫画</td></tr><tr><td>Vog</td><td>合集</td></tr></tbody></table><br><h2 id="2-圈内生态篇"><a href="#2-圈内生态篇" class="headerlink" title="2. 圈内生态篇"></a>2. 圈内生态篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>(My) Blorbo</td><td>我推</td></tr><tr><td>BMF</td><td>圈内太太（参考翻）</td></tr><tr><td>Lurker</td><td>幽灵读者（参考翻）</td></tr><tr><td>TPTB</td><td>原著方</td></tr><tr><td>Self-Shipping</td><td>梦女 &#x2F; 梦男</td></tr><tr><td>Yumejoshi</td><td>梦女</td></tr><tr><td>Yumedanshi</td><td>梦男</td></tr><tr><td>Waifu</td><td>虚拟老婆</td></tr><tr><td>Husbando</td><td>虚拟老公</td></tr><tr><td>Feminization (n.)</td><td>泥塑</td></tr><tr><td>Feminize (v.)</td><td>泥塑</td></tr><tr><td>Woobify</td><td>惨塑</td></tr><tr><td>Jossed</td><td>（同人设定）被官否</td></tr><tr><td>Kripked</td><td>（同人设定）转正</td></tr></tbody></table><br><h2 id="3-作品分类篇"><a href="#3-作品分类篇" class="headerlink" title="3. 作品分类篇"></a>3. 作品分类篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Yuri</td><td>百合</td></tr><tr><td>Yaoi</td><td>耽美（有H）</td></tr><tr><td>Shounenai</td><td>耽美</td></tr><tr><td>Slash (n.)</td><td>耽美同人</td></tr><tr><td>Original Slash</td><td>原耽</td></tr><tr><td>Femslash (n.)</td><td>百合同人</td></tr><tr><td>Pre-slash</td><td>友人以上恋人未满男男</td></tr><tr><td>RPS</td><td>真人耽美同人</td></tr><tr><td>RPF</td><td>真人同人</td></tr><tr><td>Het</td><td>BG同人</td></tr><tr><td>Gen</td><td>无CP同人</td></tr><tr><td>Doodle</td><td>涂鸦</td></tr><tr><td>Scratch</td><td>素描</td></tr><tr><td>Drabble</td><td>口嗨；随笔</td></tr><tr><td>Crack (Fic)</td><td>恶搞（文）</td></tr><tr><td>Curtainfic</td><td>日常文</td></tr><tr><td>Vignette</td><td>小品文</td></tr><tr><td>Crossover</td><td>跨作品联动</td></tr><tr><td>Big Bang</td><td>文画接力</td></tr><tr><td>Canon</td><td>原作向</td></tr><tr><td>Fanon</td><td>同人向</td></tr><tr><td>Headcanon</td><td>脑补</td></tr><tr><td>Spoiler</td><td>剧透</td></tr><tr><td>Squick</td><td>可能令人反感（的东西）</td></tr><tr><td>Angst</td><td>虐向</td></tr><tr><td>Fluff (n.)</td><td>甜饼</td></tr><tr><td>Fluffy (adj.)</td><td>轻松向</td></tr><tr><td>H&#x2F;C</td><td>救赎向</td></tr><tr><td>Smut</td><td>含H</td></tr><tr><td>PWP</td><td>纯H</td></tr><tr><td>Canon Divergence</td><td>修改原著设定</td></tr><tr><td>Not Canon Compliant</td><td>修改原著设定</td></tr><tr><td>EWE</td><td>无视原著结尾</td></tr><tr><td>Cick Bait</td><td>标题党</td></tr><tr><td>(Char) POV</td><td>（某角色的）视角</td></tr><tr><td>WIP</td><td>更新中</td></tr><tr><td>Oneshot</td><td>一发完结</td></tr><tr><td>No Beta</td><td>未校对</td></tr><tr><td>Abandoned (Fic)</td><td>弃坑（文）</td></tr><tr><td>SI</td><td>作者入文</td></tr><tr><td>A&#x2F;N</td><td>作者注</td></tr></tbody></table><br><h2 id="4-角色定位篇"><a href="#4-角色定位篇" class="headerlink" title="4. 角色定位篇"></a>4. 角色定位篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Chibi (Char)</td><td>Q版（人物）</td></tr><tr><td>OOC</td><td>和原作人格有出入</td></tr><tr><td>Oblivious xxx</td><td>对另一方暗恋自己毫不知情的（角色）</td></tr><tr><td>Switch (Char)</td><td>攻受皆可的（角色）</td></tr><tr><td>Bashing (Char)</td><td>黑化 &#x2F; 丑化（角色）</td></tr><tr><td>Woobie</td><td>可怜宝宝</td></tr><tr><td>Doom Magenet</td><td>天煞孤星</td></tr><tr><td>Red Shirt</td><td>炮灰</td></tr><tr><td>Himbo</td><td>笨蛋帅哥猛男</td></tr><tr><td>Cinnamon Roll</td><td>软萌小天使</td></tr><tr><td>Edgelord</td><td>中二黑深残</td></tr><tr><td>Mermaid</td><td>美人鱼</td></tr><tr><td>Merman</td><td>美男鱼</td></tr><tr><td>Incubus</td><td>淫魔</td></tr><tr><td>Elf</td><td>小精灵</td></tr><tr><td>Werecat</td><td>猫人</td></tr></tbody></table><br><h2 id="5-情感关系篇"><a href="#5-情感关系篇" class="headerlink" title="5. 情感关系篇"></a>5. 情感关系篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Top &#x2F; Seme</td><td>攻</td></tr><tr><td>Bottom &#x2F; Uke</td><td>受</td></tr><tr><td>Versatile &#x2F; Seke</td><td>可攻可受</td></tr><tr><td>Service Top</td><td>耕地型攻</td></tr><tr><td>Flip</td><td>互攻</td></tr><tr><td>Dom</td><td>支配者</td></tr><tr><td>Sub</td><td>服从者</td></tr><tr><td>Vanilla</td><td>纯爱</td></tr><tr><td>Cuckolding</td><td>牛头人</td></tr><tr><td>Threesomes</td><td>三人行</td></tr><tr><td>NTR</td><td>被横刀夺爱</td></tr><tr><td>419</td><td>一夜情</td></tr><tr><td>Slow Burn</td><td>慢热型（恋爱）</td></tr><tr><td>Mutual Pining</td><td>双向暗恋</td></tr><tr><td>Long-distance Relationships</td><td>异地恋</td></tr><tr><td>Enemies with Benefits</td><td>宿敌但炮友</td></tr><tr><td>Exes to Lovers</td><td>破镜重圆</td></tr><tr><td>Incest</td><td>骨科</td></tr><tr><td>Idiots in Love</td><td>恋爱脑</td></tr><tr><td>Toxic (Relationships)</td><td>不健康的（关系）</td></tr><tr><td>Established (Relationships)</td><td>已经确认的（关系）</td></tr><tr><td>Flirting</td><td>调情</td></tr></tbody></table><br><h2 id="6-分级篇"><a href="#6-分级篇" class="headerlink" title="6. 分级篇"></a>6. 分级篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>NSFW</td><td>限制级内容</td></tr><tr><td>General Audience</td><td>全年龄向；清水（文）</td></tr><tr><td>Mature</td><td>成人向；少量脏话&#x2F;暴力&#x2F;血腥</td></tr><tr><td>Explicit</td><td>露骨描写</td></tr><tr><td>Dead Dove: Do Not Eat</td><td>重口慎入</td></tr></tbody></table><h3 id="柑橘分级法："><a href="#柑橘分级法：" class="headerlink" title="# 柑橘分级法："></a># 柑橘分级法：</h3><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Orange</td><td>橙子-清水级</td></tr><tr><td>Lime</td><td>青柠-暧昧级</td></tr><tr><td>Lemon</td><td>柠檬-H级</td></tr><tr><td>Grapefruit</td><td>西柚-微重口H级</td></tr><tr><td>Pineapple</td><td>菠萝-重口级</td></tr></tbody></table><br><h2 id="7-性癖篇"><a href="#7-性癖篇" class="headerlink" title="7. 性癖篇"></a>7. 性癖篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Non-Con</td><td>强制性爱 &#x2F; 强上</td></tr><tr><td>Dub-Con</td><td>半强制性爱</td></tr><tr><td>Mpreg</td><td>男性怀孕</td></tr><tr><td>Overdose</td><td>服药过量</td></tr><tr><td>Genderswap</td><td>性转</td></tr><tr><td>Gender Bends</td><td>性转</td></tr><tr><td>Transgender</td><td>跨性别</td></tr><tr><td>Hermaphrodites</td><td>双性</td></tr><tr><td>Creature</td><td>人外</td></tr><tr><td>Whump</td><td>战损</td></tr><tr><td>Fetish</td><td>恋物癖</td></tr></tbody></table><br><h2 id="8-设定篇"><a href="#8-设定篇" class="headerlink" title="8. 设定篇"></a>8. 设定篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Alpha&#x2F;Beta&#x2F;Omega Dynamics</td><td>ABO设定</td></tr><tr><td>Sentiniel-Guide AU</td><td>哨兵向导设定</td></tr><tr><td>BDSM</td><td>BDSM设定</td></tr><tr><td>Hanahaki Disease</td><td>花吐症</td></tr><tr><td>Soulmates AU</td><td>灵魂伴侣设定</td></tr></tbody></table><br><h2 id="9-ABO设定篇"><a href="#9-ABO设定篇" class="headerlink" title="9. ABO设定篇"></a>9. ABO设定篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Dynamic (n.)</td><td>第二性别（即ABO）</td></tr><tr><td>Heat</td><td>Omega发情期</td></tr><tr><td>Rut</td><td>Alpha易感期</td></tr><tr><td>Mating Bites</td><td>标记</td></tr><tr><td>Knotting</td><td>成结</td></tr><tr><td>Touch-Starved</td><td>Omega身体接触饥渴症</td></tr><tr><td>Deprivation</td><td>Omega身体接触饥渴症</td></tr><tr><td>Scent</td><td>信息素</td></tr><tr><td>Womb</td><td>生殖腔</td></tr><tr><td>Inhibitor</td><td>抑制剂</td></tr><tr><td>Suppressant</td><td>抑制剂</td></tr><tr><td>Differentiation</td><td>分化</td></tr><tr><td>Bonding Fever</td><td>结合热</td></tr><tr><td>Gland</td><td>腺体</td></tr><tr><td>Scent Blocker</td><td>信息素阻隔剂</td></tr><tr><td>Pack Dynamics</td><td>群狼设定ABO</td></tr></tbody></table><br><h2 id="10-哨兵向导设定篇"><a href="#10-哨兵向导设定篇" class="headerlink" title="10. 哨兵向导设定篇"></a>10. 哨兵向导设定篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Sentinel</td><td>哨兵</td></tr><tr><td>Guide</td><td>向导</td></tr><tr><td>Matchmaker</td><td>媒介人</td></tr><tr><td>Awakening</td><td>觉醒</td></tr><tr><td>Sanctuary</td><td>圣所</td></tr><tr><td>Mind-scope</td><td>精神图景</td></tr><tr><td>Mind-guide</td><td>精神向导</td></tr><tr><td>Pheromone</td><td>信息素</td></tr><tr><td>Bonding Heat</td><td>结合热</td></tr><tr><td>Pills</td><td>小白片，向导素</td></tr><tr><td>Shield</td><td>屏障</td></tr><tr><td>Rite</td><td>仪式</td></tr><tr><td>Fugue</td><td>神游</td></tr><tr><td>Feral</td><td>狂化</td></tr><tr><td>Chaos</td><td>混沌</td></tr><tr><td>The Well</td><td>井；灵魂黑洞</td></tr><tr><td>The Tower</td><td>塔</td></tr></tbody></table><br><h2 id="11-特殊名词篇"><a href="#11-特殊名词篇" class="headerlink" title="11. 特殊名词篇"></a>11. 特殊名词篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>PDA</td><td>秀恩爱</td></tr><tr><td>Banter</td><td>打嘴仗</td></tr></tbody></table><br><h2 id="※-部分术语解释说明"><a href="#※-部分术语解释说明" class="headerlink" title="※ 部分术语解释说明"></a>※ 部分术语解释说明</h2><ul><li><p><code>Paro</code> 和 <code>AU</code> 区别在于，<code>Paro</code> 仅指借用其他作者的设定，但 <code>AU</code> 也可以是被广泛认可、来源未知的设定。另外，Parody 有时也表示恶搞。</p></li><li><p><code>Tribe</code> 指被同人圈广泛接受的设定，比如 ABO。</p></li><li><p><code>BMF</code>：在圈中有话语权的人。</p></li><li><p><code>Lurker</code>：不点赞不评论只默默看作品的读者。</p></li><li><p><code>TPTB</code>：全称 <code>The Powers That Be</code>。指的是原著作者、电视台或电影公司。</p></li><li><p><code>Jossed</code>：同人作品中基于先前官方原著所产生的一系列设定、背景、情节被后来的官方作品推翻。</p></li><li><p><code>Kripked</code>：同人设定与官方作品后续所出设定符合（被收编&#x2F;恰好符合）。</p></li><li><p><code>Slash</code>：Slash原本是标点符号“&#x2F;”，因为用作分隔CP两角色的符号，后来就有“耽美同人”的意思。</p></li><li><p><code>Big Bang</code>：一种特殊的作者和画师合作的同人创作挑战。作者会创作长篇小说（最低10000字），由画师为其画画。</p></li><li><p><code>Fanon</code>：由原作衍生脑补，后被圈内广泛默认的设定。</p></li><li><p><code>No Beta</code>：常见用法是“No beta we die like men”“No Beta Read”。这里的Beta指帮忙校对的读者。</p></li><li><p><code>SI</code>：全称 <code>Self-Insert</code>。指作者带入到文中的某个原创角色中影响剧情。</p></li><li><p><code>Flip</code>：互攻。尤指在同一场性爱中互攻。</p></li><li><p><code>Vanilla</code>：纯爱关系。强调温和有爱的相处方式。</p></li><li><p><code>NSFW</code>：全称 <code>Not Safe For Work</code>。限制级内容不止H，还包括违法犯罪、暴力血腥等内容。</p></li><li><p><code>The Citrus Scale</code>（柑橘分级法）具体分类如下：</p><ul><li><p><code>Orange</code>：包含亲吻、拥抱、爱抚等较为亲密的互动，但并没有H的迹象；</p></li><li><p><code>Lime</code>：包含轻微暗示和进一步暧昧举动，充满张力，但不会明确描写H行为；</p></li><li><p><code>Lemon</code>：源于肉番《乳霜柠檬》，现指有明确、直白H描写的肉文，衍生的<code>lemonade</code>则是指含肉的小甜文；</p></li><li><p><code>Grapefruit</code>：在一些圈子里指比柠檬级别更激烈或猎奇的肉，可能包含一些非主流或极端的性癖；</p></li><li><p><code>Pineapple</code>：源于涩涩动画公司 Pink Pineapple，在小众圈指性癖极猎奇的肉。</p></li></ul></li><li><p><code>Non-Con</code>：全称 <code>Non-Consensual</code>，直译是“未经同意的（性爱）”，指一方不情愿，但另一方却强制与其发生关系的情节，经常和 <code>Rape</code> 一起出现。</p></li><li><p><code>Dub-Con</code>：全称 <code>Dubius-Consensual</code>，指一方表面上并未明确拒绝，但也没有明确同意，甚至可能是被动接受、神智不清或受形势所迫而顺从。</p></li><li><p><code>Touch-Starved</code>&#x2F;<code>Deprivation</code>：在ABO世界观中，指omega长时间没有和alpha接触，因生理需求没有被满足而生的病。</p></li><li><p><code>Matchmaker</code>：在哨兵向导世界观中，媒介人多为能力出众的、结合过的向导担任，负责评估哨兵与向导的能力，并结合各方信息选择出适合对方的搭档配对牵线搭桥。</p></li><li><p><code>Sanctuary</code>：在哨兵向导世界观中，隶属于塔管辖范围的机构，负责寻找正在觉醒的哨兵或向导，并将他们集合起来进行系统的培训教育。</p></li><li><p><code>Pills</code>：在哨兵向导世界观中，特指向导素，模拟向导散发出的信息素制成的特殊药物。</p></li><li><p><code>Shield</code>：在哨兵向导世界观中，指哨兵与向导用来保护自己免受外界感官或情绪侵袭的精神壁垒。</p></li><li><p><code>Rite</code>：在哨兵向导世界观中，仪式包括结合仪式（与伴侣结合）与告别仪式（告别塔和工作）。</p></li></ul><br><h2 id="※-References"><a href="#※-References" class="headerlink" title="※ References"></a>※ References</h2><p><a href="https://mowenfeiming.github.io/post/note/slash/slash-glossary/">opengoal - 西方同人术语汇集(Slash Glossary)</a></p><p><a href="https://m.bilibili.com/opus/557943799670977088">Bilibili - 英语同人术语整理分享-Fandom Terms in English</a></p><p><a href="https://zhuanlan.zhihu.com/p/234654771?share_code=IW01rqt7v3aS&utm_psn=1937238605715215999">知乎 - 欧美同人圈三大设定考</a></p><p><a href="https://m.douban.com/group/topic/208078952/">豆瓣 - 学术｜分享和同人文&#x2F;cp有关的用法 </a></p><p><a href="https://www.douban.com/note/722151471/?_i=6228722nFKFBLm">豆瓣 - 11. “哨兵-向导”设定（sentinel-guide trope）</a></p><p><a href="http://xhslink.com/m/5lyT943s37K">小红书 - ao3学英语｜一期tag讲解汇总</a></p><p><a href="http://xhslink.com/m/AZ6bXWkQe6Z">小红书 - AO3常见tag解释</a></p><p><a href="http://xhslink.com/m/6ZmYRHhJkfB">小红书 - 欧米同人圈用词查询第一期</a></p><p><a href="http://xhslink.com/m/1sXhGBGbK1">小红书 - 动漫圈英文网络用语🔥留学二次元必看</a></p><p><a href="http://xhslink.com/m/7mbZqomO4xE">小红书 - 同人文里的英文缩写到底是啥意思！！！</a></p><p><a href="http://xhslink.com/m/27uL11swvUy">小红书 - 肉文的英文是Meaty Fiction吗？</a></p><p><a href="http://xhslink.com/m/1smaMFKnPzl">小红书 - 醒脾的英文是…？</a></p><p><a href="http://xhslink.com/m/21VyyamrDR2">小红书 - 我推的英文是…？</a></p><p><a href="http://xhslink.com/m/zr9DYR61ev">小红书 - 美强惨的英文是…？</a></p>]]></content>
    
    
    <categories>
      
      <category>存档</category>
      
      <category>同人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作</tag>
      
      <tag>同人</tag>
      
      <tag>翻译</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将缓动函数引入RMMZ</title>
    <link href="/2025/08/26/%E5%B0%86%E7%BC%93%E5%8A%A8%E5%87%BD%E6%95%B0%E5%BC%95%E5%85%A5RMMZ/"/>
    <url>/2025/08/26/%E5%B0%86%E7%BC%93%E5%8A%A8%E5%87%BD%E6%95%B0%E5%BC%95%E5%85%A5RMMZ/</url>
    
    <content type="html"><![CDATA[<h1 id="将缓动函数引入RMMZ"><a href="#将缓动函数引入RMMZ" class="headerlink" title="将缓动函数引入RMMZ"></a>将缓动函数引入RMMZ</h1><p>MV版本也可用。建议保存成插件。</p><p>这些函数其实上<a href="https://easings.net/">官网</a>也可以查到，但为图方便，索性整理到一起了。</p><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* </span><br><span class="hljs-comment">缓动函数参考: https://easings.net</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Easings.EASING_FUCTION(帧变量, 初始值, 变化量总数, 时长)</span><br><span class="hljs-comment">- 写在update函数里。根据帧变量返回缓动的位置数值。</span><br><span class="hljs-comment">e.g.</span><br><span class="hljs-comment">picture.x = Easings.easeLinear(this._frameCount, 0, 300, 600)</span><br><span class="hljs-comment">- 随着this._frameCount每帧+1，图片的X坐标从0开始，以easeLinear的缓动变化方式，在600帧(10秒)内向右移动300像素。</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">Easings</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;This is a static class&#x27;</span>);<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeLinear</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * t / d + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInQuad</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * (t /= d) * t + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutQuad</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> -c * (t /= d) * (t - <span class="hljs-number">2</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutQuad</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * t * t + b;<br>    <span class="hljs-keyword">return</span> -c / <span class="hljs-number">2</span> * ((--t) * (t - <span class="hljs-number">2</span>) - <span class="hljs-number">1</span>) + b; <br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInSine</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> -c * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(t / d * (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">2</span>)) + c + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutSine</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(t / d * (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">2</span>)) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutSine</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> -c / <span class="hljs-number">2</span> * (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> * t / d) - <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInExpo</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> (t == <span class="hljs-number">0</span>) ? b : c * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">10</span> * (t / d - <span class="hljs-number">1</span>)) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutExpo</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> (t == d) ? b + c : c * (-<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, -<span class="hljs-number">10</span> * t / d) + <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutExpo</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> (t == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> b;<br>    <span class="hljs-keyword">if</span> (t == d) <span class="hljs-keyword">return</span> b + c;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">10</span> * (t - <span class="hljs-number">1</span>)) + b;<br>    <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * (-<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, -<span class="hljs-number">10</span> * --t) + <span class="hljs-number">2</span>) + b; <br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInCirc</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> -c * (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(<span class="hljs-number">1</span> - (t /= d) * t) - <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutCirc</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(<span class="hljs-number">1</span> - (t = t / d - <span class="hljs-number">1</span>) * t) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutCirc</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> -c / <span class="hljs-number">2</span> * (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(<span class="hljs-number">1</span> - t * t) - <span class="hljs-number">1</span>) + b;<br>    <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(<span class="hljs-number">1</span> - (t -= <span class="hljs-number">2</span>) * t) + <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInCubic</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * (t /= d) * t * t + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutCubic</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * ((t = t / d - <span class="hljs-number">1</span>) * t * t + <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutCubic</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * t * t * t + b;<br>    <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * ((t -= <span class="hljs-number">2</span>) * t * t + <span class="hljs-number">2</span>) + b; <br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInQuart</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * (t /= d) * t * t * t + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutQuart</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> -c * ((t = t / d - <span class="hljs-number">1</span>) * t * t * t - <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutQuart</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * t * t * t * t + b;<br>    <span class="hljs-keyword">return</span> -c / <span class="hljs-number">2</span> * ((t -= <span class="hljs-number">2</span>) * t * t * t - <span class="hljs-number">2</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInQuint</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * (t /= d) * t * t * t * t + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutQuint</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * ((t = t / d - <span class="hljs-number">1</span>) * t * t * t * t + <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutQuint</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * t * t * t * t * t + b;<br>    <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * ((t -= <span class="hljs-number">2</span>) * t * t * t * t + <span class="hljs-number">2</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInElastic</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">var</span> s = <span class="hljs-number">1.70158</span>;<br>    <span class="hljs-keyword">var</span> p = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">var</span> a = c;<br>    <span class="hljs-keyword">if</span> (t == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> b;<br>    <span class="hljs-keyword">if</span> ((t /= d) == <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> b + c;<br>    <span class="hljs-keyword">if</span> (!p) p = d * <span class="hljs-number">0.3</span>;<br>    <span class="hljs-keyword">if</span> (a &lt; <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(c)) &#123;<br>        a = c;<br>        s = p / <span class="hljs-number">4</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> s = p / (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">asin</span>(c / a);<br>    <span class="hljs-keyword">return</span> -(a * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">10</span> * (t -= <span class="hljs-number">1</span>)) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>((t * d - s) * (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / p)) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutElastic</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">var</span> s = <span class="hljs-number">1.70158</span>;<br>    <span class="hljs-keyword">var</span> p = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">var</span> a = c;<br>    <span class="hljs-keyword">if</span> (t == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> b;<br>    <span class="hljs-keyword">if</span> ((t /= d) == <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> b + c;<br>    <span class="hljs-keyword">if</span> (!p) p = d * <span class="hljs-number">0.3</span>;<br>    <span class="hljs-keyword">if</span> (a &lt; <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(c)) &#123;<br>        a = c;<br>        s = p / <span class="hljs-number">4</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> s = p / (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">asin</span>(c / a);<br>    <span class="hljs-keyword">return</span> a * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, -<span class="hljs-number">10</span> * t) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>((t * d - s) * (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / p) + c + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutElastic</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">var</span> s = <span class="hljs-number">1.70158</span>;<br>    <span class="hljs-keyword">var</span> p = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">var</span> a = c;<br>    <span class="hljs-keyword">if</span> (t == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> b;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) == <span class="hljs-number">2</span>) <span class="hljs-keyword">return</span> b + c;<br>    <span class="hljs-keyword">if</span> (!p) p = d * (<span class="hljs-number">0.3</span> * <span class="hljs-number">1.5</span>);<br>    <span class="hljs-keyword">if</span> (a &lt; <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(c)) &#123;<br>        a = c;<br>        s = p / <span class="hljs-number">4</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> s = p / (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">asin</span>(c / a);<br>    <span class="hljs-keyword">if</span> (t &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> -<span class="hljs-number">.5</span> * (a * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">10</span> * (t -= <span class="hljs-number">1</span>)) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>((t * d - s) * (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / p)) + b;<br>    <span class="hljs-keyword">return</span> a * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, -<span class="hljs-number">10</span> * (t -= <span class="hljs-number">1</span>)) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>((t * d - s) * (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / p) * <span class="hljs-number">.5</span> + c + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInBack</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> (s == <span class="hljs-literal">undefined</span>) s = <span class="hljs-number">1.70158</span>;<br>    <span class="hljs-keyword">return</span> c * (t /= d) * t * ((s + <span class="hljs-number">1</span>) * t - s) + b; <br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutBack</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> (s == <span class="hljs-literal">undefined</span>) s = <span class="hljs-number">1.70158</span>;<br>    <span class="hljs-keyword">return</span> c * ((t = t / d - <span class="hljs-number">1</span>) * t * ((s + <span class="hljs-number">1</span>) * t + s) + <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutBack</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> (s == <span class="hljs-literal">undefined</span>) s = <span class="hljs-number">1.70158</span>;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * (t * t * (((s *= (<span class="hljs-number">1.525</span>)) + <span class="hljs-number">1</span>) * t - s)) + b;<br>    <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * ((t -= <span class="hljs-number">2</span>) * t * (((s *= (<span class="hljs-number">1.525</span>)) + <span class="hljs-number">1</span>) * t + s) + <span class="hljs-number">2</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInBounce</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c - <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">easeOutBounce</span>(d - t, <span class="hljs-number">0</span>, c, d) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutBounce</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> ((t/=d) &lt; (<span class="hljs-number">1</span>/<span class="hljs-number">2.75</span>)) &#123;<br>      <span class="hljs-keyword">return</span> c*(<span class="hljs-number">7.5625</span>*t*t) + b;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (t &lt; (<span class="hljs-number">2</span>/<span class="hljs-number">2.75</span>)) &#123;<br>      <span class="hljs-keyword">return</span> c*(<span class="hljs-number">7.5625</span>*(t-=(<span class="hljs-number">1.5</span>/<span class="hljs-number">2.75</span>))*t + <span class="hljs-number">.75</span>) + b;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (t &lt; (<span class="hljs-number">2.5</span>/<span class="hljs-number">2.75</span>)) &#123;<br>      <span class="hljs-keyword">return</span> c*(<span class="hljs-number">7.5625</span>*(t-=(<span class="hljs-number">2.25</span>/<span class="hljs-number">2.75</span>))*t + <span class="hljs-number">.9375</span>) + b;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> c*(<span class="hljs-number">7.5625</span>*(t-=(<span class="hljs-number">2.625</span>/<span class="hljs-number">2.75</span>))*t + <span class="hljs-number">.984375</span>) + b;<br>    &#125;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutBounce</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> (t &lt; d/<span class="hljs-number">2</span>) <span class="hljs-keyword">return</span> <span class="hljs-title function_">easeInBounce</span> (t*<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, c, d) * <span class="hljs-number">.5</span> + b;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">easeOutBounce</span> (t*<span class="hljs-number">2</span>-d, <span class="hljs-number">0</span>, c, d) * <span class="hljs-number">.5</span> + c*<span class="hljs-number">.5</span> + b;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>存档</category>
      
      <category>RM开发</category>
      
      <category>插件脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RMMZ</tag>
      
      <tag>代码</tag>
      
      <tag>RMMV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bitmap圆角矩形</title>
    <link href="/2025/08/26/Bitmap%E7%B1%BB%E6%89%A9%E5%B1%95-%E7%BB%98%E5%88%B6%E5%9C%86%E8%A7%92%E7%9F%A9%E5%BD%A2/"/>
    <url>/2025/08/26/Bitmap%E7%B1%BB%E6%89%A9%E5%B1%95-%E7%BB%98%E5%88%B6%E5%9C%86%E8%A7%92%E7%9F%A9%E5%BD%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="Bitmap类扩展-圆角矩形"><a href="#Bitmap类扩展-圆角矩形" class="headerlink" title="Bitmap类扩展 - 圆角矩形"></a>Bitmap类扩展 - 圆角矩形</h1><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">Bitmap.strokeRoundRect(</span><br><span class="hljs-comment">    x, y, width, height, radius, color</span><br><span class="hljs-comment">)</span><br><span class="hljs-comment">- 绘制出圆角矩形的轮廓</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Bitmap.fillRoundRect(</span><br><span class="hljs-comment">    x, y, width, height, radius, color</span><br><span class="hljs-comment">)</span><br><span class="hljs-comment">- 填充出圆角矩形</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Bitmap.gradientFillRoundRect(</span><br><span class="hljs-comment">    x, y, width, height, radius, color1, color2, vertical</span><br><span class="hljs-comment">)</span><br><span class="hljs-comment">- 以渐变色填充出圆角矩形</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-title class_">Bitmap</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">strokeRoundRect</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">x, y, width, height, radius, color</span>) &#123;<br>    <span class="hljs-keyword">const</span> context = <span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>;<br>    context.<span class="hljs-property">fillStyle</span> = color;<br>    context.<span class="hljs-property">strokeStyle</span> = color;<br>    context.<span class="hljs-title function_">beginPath</span>();<br>    context.<span class="hljs-title function_">moveTo</span>(x + radius, y);<br>    context.<span class="hljs-title function_">lineTo</span>(x + width - radius, y);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x + width, y, x + width, y + radius);<br>    context.<span class="hljs-title function_">lineTo</span>(x + width, y + height - radius);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x + width, y + height, x + width - radius, y + height);<br>    context.<span class="hljs-title function_">lineTo</span>(x + radius, y + height);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x, y + height, x, y + height - radius);<br>    context.<span class="hljs-title function_">lineTo</span>(x, y + radius);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x, y, x + radius, y);<br>    context.<span class="hljs-title function_">closePath</span>();<br>    context.<span class="hljs-title function_">stroke</span>();<br>&#125;;<br><br><span class="hljs-title class_">Bitmap</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">fillRoundRect</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">x, y, width, height, radius, color</span>) &#123;<br>    <span class="hljs-keyword">const</span> context = <span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>;<br>    context.<span class="hljs-property">fillStyle</span> = color;<br>    context.<span class="hljs-title function_">beginPath</span>();<br>    context.<span class="hljs-title function_">moveTo</span>(x + radius, y);<br>    context.<span class="hljs-title function_">lineTo</span>(x + width - radius, y);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x + width, y, x + width, y + radius);<br>    context.<span class="hljs-title function_">lineTo</span>(x + width, y + height - radius);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x + width, y + height, x + width - radius, y + height);<br>    context.<span class="hljs-title function_">lineTo</span>(x + radius, y + height);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x, y + height, x, y + height - radius);<br>    context.<span class="hljs-title function_">lineTo</span>(x, y + radius);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x, y, x + radius, y);<br>    context.<span class="hljs-title function_">closePath</span>();<br>    context.<span class="hljs-title function_">fill</span>();<br>&#125;;<br><br><span class="hljs-title class_">Bitmap</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">gradientFillRoundRect</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span><br><span class="hljs-params">    x, y, width, height, radius, color1, color2, vertical</span><br><span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> context = <span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>;<br>    <span class="hljs-keyword">const</span> x1 = vertical ? x : x + width;<br>    <span class="hljs-keyword">const</span> y1 = vertical ? y + height : y;<br>    <span class="hljs-keyword">const</span> grad = context.<span class="hljs-title function_">createLinearGradient</span>(x, y, x1, y1);<br>    grad.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">0</span>, color1);<br>    grad.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">1</span>, color2);<br>    context.<span class="hljs-title function_">save</span>();<br>    context.<span class="hljs-property">fillStyle</span> = grad;<br>    context.<span class="hljs-title function_">beginPath</span>();<br>    context.<span class="hljs-title function_">moveTo</span>(x + radius, y);<br>    context.<span class="hljs-title function_">lineTo</span>(x + width - radius, y);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x + width, y, x + width, y + radius);<br>    context.<span class="hljs-title function_">lineTo</span>(x + width, y + height - radius);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x + width, y + height, x + width - radius, y + height);<br>    context.<span class="hljs-title function_">lineTo</span>(x + radius, y + height);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x, y + height, x, y + height - radius);<br>    context.<span class="hljs-title function_">lineTo</span>(x, y + radius);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x, y, x + radius, y);<br>    context.<span class="hljs-title function_">closePath</span>();<br>    context.<span class="hljs-title function_">fill</span>();<br>    context.<span class="hljs-title function_">restore</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_baseTexture</span>.<span class="hljs-title function_">update</span>();<br>&#125;;<br></code></pre></td></tr></table></figure><br><p>使用实例：</p><br><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 将窗口选项的背景形状从矩形改为圆角矩形 */</span><br><br><span class="hljs-title class_">Window</span>_Selectable.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">drawBackgroundRect</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">rect</span>) &#123;<br>    <span class="hljs-keyword">const</span> c1 = <span class="hljs-title class_">ColorManager</span>.<span class="hljs-title function_">itemBackColor1</span>();<br>    <span class="hljs-keyword">const</span> c2 = <span class="hljs-title class_">ColorManager</span>.<span class="hljs-title function_">itemBackColor2</span>();<br>    <span class="hljs-keyword">const</span> x = rect.<span class="hljs-property">x</span>;<br>    <span class="hljs-keyword">const</span> y = rect.<span class="hljs-property">y</span>;<br>    <span class="hljs-keyword">const</span> w = rect.<span class="hljs-property">width</span>;<br>    <span class="hljs-keyword">const</span> h = rect.<span class="hljs-property">height</span>;<br>    <span class="hljs-keyword">const</span> radius = <span class="hljs-number">5</span>;  <span class="hljs-comment">// 圆角矩形的半径</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">contentsBack</span>.<span class="hljs-title function_">gradientFillRoundRect</span>(x, y, w, h, radius, c1, c2, <span class="hljs-literal">true</span>);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">contentsBack</span>.<span class="hljs-title function_">gradientFillRoundRect</span>(x, y, w, h, radius, c1);<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>存档</category>
      
      <category>RM开发</category>
      
      <category>插件脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RMMZ</tag>
      
      <tag>代码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RMMZ插件开发通用代码片段</title>
    <link href="/2025/08/26/RMMV-RMMZ%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E9%80%9A%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/"/>
    <url>/2025/08/26/RMMV-RMMZ%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E9%80%9A%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="RMMZ插件开发时开箱即用的代码片段"><a href="#RMMZ插件开发时开箱即用的代码片段" class="headerlink" title="RMMZ插件开发时开箱即用的代码片段"></a>RMMZ插件开发时开箱即用的代码片段</h1><p>存档。</p><h2 id="1-新增控制字符："><a href="#1-新增控制字符：" class="headerlink" title="1. 新增控制字符："></a>1. 新增控制字符：</h2><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> __Window_Message_processEscapeCharacter = <span class="hljs-title class_">Window</span>_Message.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">processEscapeCharacter</span>;<br><span class="hljs-title class_">Window</span>_Message.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">processEscapeCharacter</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">code, textState</span>) &#123;<br>    <span class="hljs-keyword">switch</span>(code) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;ECA&#x27;</span>:<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">processEscapeCodeASpecialState</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">obtainEscapeParam</span>(textState));<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;ECB&#x27;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">999</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-attr">default</span>: <br>            __Window_Message_processEscapeCharacter.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, code, textState);<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><br><h2 id="2-新增-Game-XXX-类（附带-gameXXX，存入存档）"><a href="#2-新增-Game-XXX-类（附带-gameXXX，存入存档）" class="headerlink" title="2. 新增 Game_XXX() 类（附带 $gameXXX，存入存档）"></a>2. 新增 Game_XXX() 类（附带 $gameXXX，存入存档）</h2><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> $gameXXX = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">let</span> __DataManager_createGameObjects = <span class="hljs-title class_">DataManager</span>.<span class="hljs-property">createGameObjects</span>;<br><span class="hljs-title class_">DataManager</span>.<span class="hljs-property">createGameObjects</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    __DataManager_createGameObjects.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>    $gameXXX = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Game</span>_XXX();<br>&#125;;<br><br><span class="hljs-keyword">let</span> __DataManager_makeSaveContents = <span class="hljs-title class_">DataManager</span>.<span class="hljs-property">makeSaveContents</span>;<br><span class="hljs-title class_">DataManager</span>.<span class="hljs-property">makeSaveContents</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> contents = __DataManager_makeSaveContents.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>    contents.<span class="hljs-property">xxx</span> = $gameXXX;<br>    <span class="hljs-keyword">return</span> contents;<br>&#125;;<br><br><span class="hljs-keyword">let</span> __DataManager_extractSaveContents = <span class="hljs-title class_">DataManager</span>.<span class="hljs-property">extractSaveContents</span>;<br><span class="hljs-title class_">DataManager</span>.<span class="hljs-property">extractSaveContents</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">contents</span>) &#123;<br>    __DataManager_extractSaveContents.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, contents);<br>    $gameXXX = contents.<span class="hljs-property">xxx</span>;<br>&#125;;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">Game_XXX</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">initialize</span>(...<span class="hljs-variable language_">arguments</span>);<br>&#125;;<br><br><span class="hljs-title class_">Game</span>_XXX.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">initialize</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// </span><br>&#125;;<br></code></pre></td></tr></table></figure><br><h2 id="3-向地图各层添加-Sprite-实例"><a href="#3-向地图各层添加-Sprite-实例" class="headerlink" title="3. 向地图各层添加 Sprite() 实例"></a>3. 向地图各层添加 Sprite() 实例</h2><h3 id="最底层（地图图块层）："><a href="#最底层（地图图块层）：" class="headerlink" title="最底层（地图图块层）："></a>最底层（地图图块层）：</h3><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> __Spriteset_Base_createPictures = <span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createPictures</span>;<br><span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createPictures</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">createLowerSprite</span>();<br>    __Spriteset_Base_createPictures.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createLowerSprite</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sprite</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">addChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span>);<br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Map.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createLowerSprite</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sprite</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span>.<span class="hljs-property">z</span> = <span class="hljs-number">1</span>; <span class="hljs-comment">// 0 - 远景层，1 - 图块层，3 - 玩家/事件层</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_tilemap</span>.<span class="hljs-title function_">addChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span>);<br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Battle.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createLowerSprite</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sprite</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">updateLowerPictureContainerZ</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span>.<span class="hljs-property">x</span> = -<span class="hljs-variable language_">this</span>.<span class="hljs-property">_battleField</span>.<span class="hljs-property">x</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span>.<span class="hljs-property">y</span> = -<span class="hljs-variable language_">this</span>.<span class="hljs-property">_battleField</span>.<span class="hljs-property">y</span>;<br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Battle.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">updateLowerPictureContainerZ</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_battleField</span>.<span class="hljs-title function_">addChildAt</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span>,  <span class="hljs-number">0</span>);<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="中层（图片下方、图片上方）："><a href="#中层（图片下方、图片上方）：" class="headerlink" title="中层（图片下方、图片上方）："></a>中层（图片下方、图片上方）：</h3><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 如果和上一段代码合用，必须在上一段之后书写这一段</span><br><br><span class="hljs-keyword">let</span> __Spriteset_Base_createPictures = <span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createPictures</span>;<br><span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createPictures</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">createBelowPictureSprite</span>(); <span class="hljs-comment">// 图片层之下</span><br>    __Spriteset_Base_createPictures.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">createAbovePictureSprite</span>(); <span class="hljs-comment">// 图片层之上</span><br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createBelowPictureSprite</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_belowPictureSprite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sprite</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">addChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_belowPictureSprite</span>);<br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createAbovePictureSprite</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_abovePictureSprite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sprite</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">addChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_abovePictureSprite</span>);<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="最高层（窗口上方）："><a href="#最高层（窗口上方）：" class="headerlink" title="最高层（窗口上方）："></a>最高层（窗口上方）：</h3><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> __Scene_Base_createWindowLayer = <span class="hljs-title class_">Scene</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createWindowLayer</span>;<br><span class="hljs-title class_">Scene</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createWindowLayer</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    __Scene_Base_createWindowLayer.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_spriteset</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">_spriteset</span>.<span class="hljs-title function_">createUpperSprite</span>(<span class="hljs-variable language_">this</span>);<br>    &#125;<br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createUpperSprite</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">parentScene</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_upperSprite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sprite</span>();<br>    parentScene.<span class="hljs-title function_">addChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_upperSprite</span>);<br>&#125;;<br></code></pre></td></tr></table></figure><br><h2 id="4-控制字符接收字符串参数"><a href="#4-控制字符接收字符串参数" class="headerlink" title="4. 控制字符接收字符串参数"></a>4. 控制字符接收字符串参数</h2><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Window</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">obtainEscapeString</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">textState</span>) &#123;<br>    <span class="hljs-keyword">const</span> arr = <span class="hljs-regexp">/^\[(.*?)\]/</span>.<span class="hljs-title function_">exec</span>(textState.<span class="hljs-property">text</span>.<span class="hljs-title function_">slice</span>(textState.<span class="hljs-property">index</span>));<br>    <span class="hljs-keyword">if</span>(arr) &#123;<br>        textState.<span class="hljs-property">index</span> += arr[<span class="hljs-number">0</span>].<span class="hljs-property">length</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>(arr[<span class="hljs-number">0</span>].<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>, arr[<span class="hljs-number">0</span>].<span class="hljs-property">length</span> - <span class="hljs-number">1</span>));<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>存档</category>
      
      <category>RM开发</category>
      
      <category>插件脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RMMZ</tag>
      
      <tag>代码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+Netlify搭建&amp;更新个人博客教程</title>
    <link href="/2025/08/26/Hexo-Netlify%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E6%9B%B4%E6%96%B0%E6%96%87%E7%AB%A0%E6%95%99%E7%A8%8B/"/>
    <url>/2025/08/26/Hexo-Netlify%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E6%9B%B4%E6%96%B0%E6%96%87%E7%AB%A0%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<blockquote><p>原教程<a href="https://zhuanlan.zhihu.com/p/39923772">在此</a>。这篇教程精简了原教程的内容，并在其基础上添加了一些额外情况的设置。</p><p>注：以下列出的所有命令前面的 $ 符号表示 macOS 普通用户的命令提示符，Windows 用户在输入命令时不需要输入 $ 。</p></blockquote><br><br><h1 id="Hexo-Netlify搭建-更新个人博客教程"><a href="#Hexo-Netlify搭建-更新个人博客教程" class="headerlink" title="Hexo+Netlify搭建&amp;更新个人博客教程"></a>Hexo+Netlify搭建&amp;更新个人博客教程</h1><p>主要思路：Hexo建站，Github托管代码，Netlify部署。</p><h2 id="I-搭建博客"><a href="#I-搭建博客" class="headerlink" title="I.搭建博客"></a>I.搭建博客</h2><h3 id="一、安装前置"><a href="#一、安装前置" class="headerlink" title="一、安装前置"></a>一、安装前置</h3><ol><li><p><strong>安装 Node.js</strong></p><p>访问<a href="https://www.nodejs.com.cn/download.html">Node.js官网</a>，下载长期维护版的安装包，随后根据指引安装。</p></li><li><p><strong>安装 Git</strong></p><p>访问<a href="https://www.nodejs.com.cn/download.html">Git官网</a>，下载安装包并按部就班安装。</p></li><li><p><strong>注册Github账号</strong></p><p>访问<a href="https://github.com/">Github官网</a>，用邮箱注册一个Github账号。记住注册所用的邮箱和账号的用户名。</p></li><li><p><strong>注册Netlify账号</strong></p><p>访问<a href="https://www.netlify.com/">Netlify官网</a>注册一个账号。</p></li><li><p><strong>安装 Hexo</strong></p><p>调出命令提示符&#x2F;打开终端，输入npm命令安装Hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>安装完成后可以输入以下命令检查是否安装妥当：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo -v<br></code></pre></td></tr></table></figure><p>如能显示hexo的版本和npm的版本，即安装成功。</p></li></ol><br><h3 id="二、搭建Hexo"><a href="#二、搭建Hexo" class="headerlink" title="二、搭建Hexo"></a>二、搭建Hexo</h3><ol><li><p><strong>创建Hexo项目</strong></p><p>输入以下命令创建项目文件夹路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init /PATH/TO/hexo<br></code></pre></td></tr></table></figure><p><span id="jump"></span>切换至刚刚创建的文件夹，输入命令（路径必须为绝对路径，例如 F:\Random\Blog）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> /d /PATH/TO/hexo<br></code></pre></td></tr></table></figure></li><li><p><strong>初始化项目</strong></p><p>运行了刚才的 <code>hexo init</code> 命令，我们的项目文件夹内已经安好了必要组件。现在，通过npm来初始化Hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install<br></code></pre></td></tr></table></figure><p>等待搭建完成。这样，我们的网站就建好了。</p><p>使用以下命令预览我们的网站：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>随后访问命令提示符或终端给出的网址即可预览。网址一般是 <a href="http://localhost:4000/">http://localhost:4000/</a> 或者 <a href="http://0.0.0.0:4000/">http://0.0.0.0:4000/</a> 。</p><p>若要继续设置，在窗口焦点处于命令提示符 &#x2F; 终端时，按 Ctrl+C &#x2F; Command+C 。</p><p>在这之后，可以设置基础参数、安装Hexo主题、撰写新博文。具体操作方法<a href="#II.%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2">见下</a>。</p></li><li><p><strong>建站前最后的准备工作</strong></p><p>清除缓存数据，并为项目生成静态文件用以上传：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br>$ hexo generate<br></code></pre></td></tr></table></figure><p>鉴于我们不需要对网站内容进行版本控制，我们可将 public&#x2F; 文件夹添加至 <code>.gitignore</code> 文档中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/public&quot;</span> &gt;&gt; .gitignore<br></code></pre></td></tr></table></figure><p>接下来，我们要将网站内容推送至Github这个代码托管服务上。</p></li></ol><br><h3 id="三、搭建网站"><a href="#三、搭建网站" class="headerlink" title="三、搭建网站"></a>三、搭建网站</h3><ol><li><p><strong>配置Git</strong></p><p>如果是第一次安装Git，那么在使用前，我们首先需要配置Git的基本信息，这些信息包括我们的Github账户用户名和注册邮箱。</p><p>以用户名 <code>YourName</code>，邮箱 <code>YourEmail@example.com</code> 为例，打开命令提示符&#x2F;终端，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global user.name <span class="hljs-string">&quot;YourName&quot;</span><br>$ git config --global user.email <span class="hljs-string">&quot;YourEmail@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>配置好Git之后，可以用以下命令检查是否已成功安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git --version<br></code></pre></td></tr></table></figure></li><li><p><strong>开始托管</strong></p><p>登录Github账号，点击绿色按钮 <code>New</code>（Repository）新建一个仓库。为仓库命名时记住这个名字，后面会用。以下将会以 <code>hexo_netlify</code> 作为示例仓库名。</p><p>注意，不要在 <code>Initialize this repository with a README</code> 前打勾，<code>Add .gitignore</code> 和 <code>Add a license</code> 处请选择 None。</p><p>随后，在命令提示符或终端里切换到项目文件夹（<a href="#jump">方法见此</a>），初始化仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git init<br></code></pre></td></tr></table></figure><p>通过 <code>git add</code> 跟踪指定项目文件，然后执行 <code>git commit</code> 提交：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git add .<br>$ git commit -m <span class="hljs-string">&quot;initial commit&quot;</span><br></code></pre></td></tr></table></figure><p>回到之前我们创建GitHub仓库完成的页面，复制远程仓库链接（一般长这样：<a href="https://github.com/yourName/hexo_netlify.git">https://github.com/yourName/hexo_netlify.git</a> ），在命令控制符&#x2F;终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git remote add origin &lt;远程仓库链接&gt;<br></code></pre></td></tr></table></figure><p>可以用 <code>git remote -v</code> 来验证链接是否正确。</p><p>确认准确无误后，用以下指令推送本地仓库内容至GitHub：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git push origin master<br></code></pre></td></tr></table></figure><p>等待上传完成。</p><p>至此，源代码就全部上传到Github了。接下来我们开始通过Netlify来发布网站。</p></li><li><p><strong>发布网站</strong></p><p>登录Netlify账户，进入<a href="https://app.netlify.com/account/sites">建站页面</a>，点击 <code>New site from Git</code> 进入下一步。</p><p>首先，在第一步里选择 <code>Github</code>，按部就班关联 Github 账户。</p><p>如果是第一次关联两个账户，则点击绿色按钮 <code>Authorize netlify</code> 同意授权Netlify访问GitHub上的仓库内容。</p><p>授权完毕后，页面会跳转回Netlify，来到第二步。在这里选择我们刚才新建的Github仓库。</p><p>然后来到第三步，我们只需将 <code>Build command</code> 参数设置为 <strong>hexo generate</strong> 即可。</p><p>最后，点击 <code>Deploy site</code>，等待构建完成即可。</p><br><p>Netlify会在网站发布成功的同时提供给你一个以 *.netlify.com 为后缀、随机生成的英文名为前缀的子域名。假如你不喜欢Netlify自动生成的子域名，并且还未来得及购买域名，可以通过 <code>Domain settings</code> &gt; <code>Edit site name</code> 来重命名。</p></li></ol><br><br><h2 id="II-更新博客"><a href="#II-更新博客" class="headerlink" title="II.更新博客"></a>II.更新博客</h2><p>包括设置、美化、更新博客的一系列操作。</p><h3 id="一、设置基础参数"><a href="#一、设置基础参数" class="headerlink" title="一、设置基础参数"></a>一、设置基础参数</h3><p>打开项目文件夹，用代码编辑器（推荐 NotePad++ 或者 VS Code）打开 <code>_config.yaml</code> 文件。</p><p>在靠前的部分，我们可以看到以下设置：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"># Site<br><span class="hljs-symbol">title:</span> Hexo<br><span class="hljs-symbol">subtitle:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><span class="hljs-symbol">description:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><span class="hljs-symbol">keywords:</span><br><span class="hljs-symbol">author:</span><br><span class="hljs-symbol">language:</span> en<br><span class="hljs-symbol">timezone:</span> <span class="hljs-comment">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>其中，<code>title</code> 是网站名称，<code>subtitle</code> 是副标题，<code>author</code> 是建站者姓名，<code>language</code> 是网站的语言（简体中文是 zh-CN）。如有需要请自行修改。</p><br><h3 id="二、安装主题"><a href="#二、安装主题" class="headerlink" title="二、安装主题"></a>二、安装主题</h3><ol><li><p><strong>安装</strong></p><p>从Github上搜索并下载心仪的主题，随后根据其介绍页的教程安装。</p><p>通过命令控制符&#x2F;终端安装时，记得先切换至项目文件夹再安装。</p></li><li><p><strong>配置</strong></p><p>打开项目文件夹，用代码编辑器（推荐 NotePad++ 或者 VS Code）打开 <code>_config.yaml</code> 文件。</p><p>搜索关键词“theme”，将默认的 landscape 更改为安装好的主题的名字即可。</p><p>若希望在主题上做进一步的修改，则在项目文件夹根目录中打开名为 _config.[theme-name].yaml 的文件，修改其中的设置即可。</p></li></ol><br><h3 id="三、撰写新内容"><a href="#三、撰写新内容" class="headerlink" title="三、撰写新内容"></a>三、撰写新内容</h3><ol><li><p><strong>撰写新博文</strong></p><ul><li><strong>a. 生成博文文件</strong></li></ul><p>在命令控制符&#x2F;终端里，先切换到项目文件夹下，然后输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;新博文&quot;</span><br></code></pre></td></tr></table></figure><p>这样，在项目文件夹下 source&#x2F;_post&#x2F; 就会出现一个 新博文.md 文件。在这个新生成的 Markdown 文件里接着已经生成的内容撰写博文即可。Markdown 语法见<a href="https://www.runoob.com/markdown/md-tutorial.html">此处</a>。</p><p>如果我们不希望我们的文章发布出去，可以先生成一个草稿。所有草稿内容都不会被发布出来。</p><p>在命令控制符&#x2F;终端里，先切换到项目文件夹下，然后输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new draft <span class="hljs-string">&quot;新博文草稿&quot;</span><br></code></pre></td></tr></table></figure><p>这样，在项目文件夹下 source&#x2F;_draft&#x2F; 就会出现一个 新博文草稿.md 文件。</p><br><ul><li><strong>b. 配置博文</strong></li></ul><p>打开新生成的.md文件后，我们可以看到里面已经有了一些内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">新博文</span><br><span class="hljs-attr">date:</span> <span class="hljs-string">20xx-xx-xx</span> <span class="hljs-string">xx:xx:xx</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>这里的 <code>title</code> 就是博文的标题，<code>date</code> 是发布日期，<code>tags</code> 则是该博文的所属的一系列tag，可以自定义。</p><p>如果想为博文添加多个tag，我们可以这样编辑 <code>tags</code> 字段：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">tags:</span><br>- 标签1<br>- 标签2<br>...<br></code></pre></td></tr></table></figure><p>除了以上默认的三个参数，我们还可以写以下这些参数：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">updated:</span> 更新时间，格式和<span class="hljs-type">date</span>相同<br><span class="hljs-symbol">categories:</span> 所属分类<br><span class="hljs-symbol">excerpt:</span> 文章摘要<br><span class="hljs-symbol">lang:</span> 文章语言<br><span class="hljs-symbol">published:</span> 是否发布<br><span class="hljs-symbol">author:</span> 文章作者<br><span class="hljs-symbol">keywords:</span> 关键词<br><span class="hljs-symbol">description:</span> 文章简介<br></code></pre></td></tr></table></figure><p><strong>※</strong> <code>categories</code> 和 <code>tags</code> 的相同点与区别：</p><ul><li><p>设置 <code>categories</code> 和 <code>tags</code> 时格式几乎一样。<code>categories</code> 也可以这样设置：</p> <figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">categories</span>:<br><span class="hljs-literal">-</span> 类别1<br><span class="hljs-literal">-</span> 类别2<br></code></pre></td></tr></table></figure></li><li><p>然而，<code>categories</code> 可以设置多级结构，<code>tags</code> 不行。例如，<code>categories</code> 可以这样设置：</p> <figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">categories</span>:<br><span class="hljs-literal">-</span> [类别1, 类别2]   // 属于类别1/类别2，类别2是类别1的子类别<br><span class="hljs-literal">-</span> 类别3<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>添加新页面（Page）</strong></p><p>在命令控制符&#x2F;终端里，先切换到项目文件夹下，然后输入命令（例）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new page about<br></code></pre></td></tr></table></figure><p>这样，在项目文件夹下 source&#x2F;about&#x2F; 就会出现一个 index.md 文件。编辑此.md文件即可。</p><p>在我们用 <code>hexo server</code> 预览网站时，访问 .&#x2F;about&#x2F;就可以看到在index.md中编辑的内容了。</p></li></ol><br><h3 id="四、更新博客"><a href="#四、更新博客" class="headerlink" title="四、更新博客"></a>四、更新博客</h3><p>在命令控制符&#x2F;终端里，先切换到项目文件夹下，然后清除旧缓存数据并生成静态页面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br>$ hexo generate<br></code></pre></td></tr></table></figure><p>启用本地服务器预览更新后的网站：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>确认无误后退出预览，开始部署到线上。</p><p>鉴于我们不需要对网站内容进行版本控制，我们可将新生成的 public&#x2F; 文件夹添加至<code>.gitignore</code>文档中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/public&quot;</span> &gt;&gt; .gitignore<br></code></pre></td></tr></table></figure><p>首先初始化Git，然后通过 <code>git add</code> 跟踪指定项目文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git init<br>$ git add .<br></code></pre></td></tr></table></figure><p>如果记得自己修改、增添、删除了什么文件，也可以直接 add 指定文件。不过这么做比较麻烦。</p><p>然后执行 <code>git commit</code> 提交：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git commit -m <span class="hljs-string">&quot;new post added&quot;</span><br></code></pre></td></tr></table></figure><p>这里的 <code>&quot;new post added&quot;</code> 可以认作是此次更新的更新信息，可自定义。</p><p>最后直接用以下指令推送本地仓库内容至GitHub：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git push origin master<br></code></pre></td></tr></table></figure><p>等待上传完成即可。</p><br><p>※ <code>git push origin master</code> 运行后有可能会报错：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">fatal: unable <span class="hljs-keyword">to</span> <span class="hljs-keyword">access</span> <span class="hljs-string">&#x27;https://github.com/YourName/hexo_netlify.git/&#x27;</span>: Failed <span class="hljs-keyword">to</span> <span class="hljs-keyword">connect</span> <span class="hljs-keyword">to</span> github.com port <span class="hljs-number">443</span> <span class="hljs-keyword">after</span> <span class="hljs-number">21108</span> ms: Could <span class="hljs-keyword">not</span> <span class="hljs-keyword">connect</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p>此时，我们只需向Git设置代理即可。</p><p>首先关闭VPN（如果开着的话），然后查看电脑系统的代理设置。</p><ul><li><p><strong>Windows</strong></p><p>打开“设置” &gt; “网络和 Internet” &gt; “代理”。</p><p>点击代理设置页面下“使用代理服务器”的“设置”按钮，我们就可以看到代理服务器地址和端口。</p></li><li><p><strong>MacOS</strong></p><p>打开“系统偏好设置” &gt; “网络”。</p><p>选择正在使用的网络连接（如 Wi-Fi 或有线），然后点击“高级”。</p><p>转到“代理”标签页，我们可以看到代理服务器的设置。</p></li></ul><p>由此，我们就得到了代理地址（通常是 <a href="http://127.0.0.1)和端口(数字,如5000等)./">http://127.0.0.1）和端口（数字，如5000等）。</a></p><p>随后配置Git全局代理。在命令控制符&#x2F;终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global http.proxy &lt;代理地址&gt;:&lt;端口&gt;<br></code></pre></td></tr></table></figure><p>最后，再运行一次 <code>git push origin master</code> 命令就可以了。</p><p>注意，如果配置了错误的Git全局代理，可以输入以下命令清除：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global --<span class="hljs-built_in">unset</span> http.proxy<br>$ config --global --<span class="hljs-built_in">unset</span> https.proxy<br></code></pre></td></tr></table></figure><p>随后再设置一次即可。</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>代码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>碎碎念#1</title>
    <link href="/2025/08/26/%E7%A2%8E%E7%A2%8E%E5%BF%B5-1/"/>
    <url>/2025/08/26/%E7%A2%8E%E7%A2%8E%E5%BF%B5-1/</url>
    
    <content type="html"><![CDATA[<p>在今天迎来了人生第一个真正意义上的博客……感觉还蛮好？Hexo建站原来这么简单。</p><p>之后大概会发点学习心得之类的东西，还有日常碎碎念什么的。一些教程、口嗨（真的会有吗）应该也会发上来，不然内容也太少了（）</p><br><p>对了如果我哪天忘了怎么用Hexo发博客记得看这个教程：</p><p><a href="https://zhuanlan.zhihu.com/p/39923772">https://zhuanlan.zhihu.com/p/39923772</a></p><br><p>更新了在上面这个教程的基础上试错试出来的教程，应该万无一失了吧（</p>]]></content>
    
    
    
    <tags>
      
      <tag>杂项</tag>
      
      <tag>碎碎念</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
