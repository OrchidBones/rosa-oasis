<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>欧美同人术语英中对照表</title>
    <link href="/2025/08/27/%E6%AC%A7%E7%BE%8E%E5%90%8C%E4%BA%BA%E6%9C%AF%E8%AF%AD%E5%AF%B9%E7%85%A7%E8%A1%A8/"/>
    <url>/2025/08/27/%E6%AC%A7%E7%BE%8E%E5%90%8C%E4%BA%BA%E6%9C%AF%E8%AF%AD%E5%AF%B9%E7%85%A7%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<style>table {    width: 100%;}</style><h1 id="欧美同人术语英中对照表"><a href="#欧美同人术语英中对照表" class="headerlink" title="欧美同人术语英中对照表"></a>欧美同人术语英中对照表</h1><p>用浏览器的搜索功能查找。</p><p>末尾附部分术语的解释说明。</p><h2 id="1-通用篇"><a href="#1-通用篇" class="headerlink" title="1. 通用篇"></a>1. 通用篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Fandom</td><td>同人圈</td></tr><tr><td>Fanart</td><td>同人图</td></tr><tr><td>Fanfic</td><td>同人文</td></tr><tr><td>BroTP</td><td>CB</td></tr><tr><td>Ship (n.)</td><td>CP</td></tr><tr><td>Ship (v.)</td><td>磕（CP）</td></tr><tr><td>Shipper</td><td>CP粉</td></tr><tr><td>Antishipper</td><td>CP小警察</td></tr><tr><td>OTP</td><td>本命CP</td></tr><tr><td>Rarepair</td><td>冷门CP</td></tr><tr><td>Ship War</td><td>掐CP</td></tr><tr><td>Sailed (Ship)</td><td>官配</td></tr><tr><td>Sunk (Ship)</td><td>变得难磕的（CP）</td></tr><tr><td>AU</td><td>世界观；平行世界</td></tr><tr><td>xxx Paro</td><td>xxx 梗</td></tr><tr><td>OC</td><td>原创角色</td></tr><tr><td>Tribe</td><td>设定</td></tr><tr><td>Kink</td><td>性癖</td></tr><tr><td>Doujinshi</td><td>同人志</td></tr><tr><td>Manga</td><td>漫画</td></tr><tr><td>Vog</td><td>合集</td></tr></tbody></table><br><h2 id="2-圈内生态篇"><a href="#2-圈内生态篇" class="headerlink" title="2. 圈内生态篇"></a>2. 圈内生态篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>(My) Blorbo</td><td>我推</td></tr><tr><td>BMF</td><td>圈内太太（参考翻）</td></tr><tr><td>Lurker</td><td>幽灵读者（参考翻）</td></tr><tr><td>TPTB</td><td>原著方</td></tr><tr><td>Self-Shipping</td><td>梦女 &#x2F; 梦男</td></tr><tr><td>Yumejoshi</td><td>梦女</td></tr><tr><td>Yumedanshi</td><td>梦男</td></tr><tr><td>Waifu</td><td>虚拟老婆</td></tr><tr><td>Husbando</td><td>虚拟老公</td></tr><tr><td>Feminization (n.)</td><td>泥塑</td></tr><tr><td>Feminize (v.)</td><td>泥塑</td></tr><tr><td>Woobify</td><td>惨塑</td></tr><tr><td>Jossed</td><td>（同人设定）被官否</td></tr><tr><td>Kripked</td><td>（同人设定）转正</td></tr></tbody></table><br><h2 id="3-作品分类篇"><a href="#3-作品分类篇" class="headerlink" title="3. 作品分类篇"></a>3. 作品分类篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Yuri</td><td>百合</td></tr><tr><td>Yaoi</td><td>耽美（有H）</td></tr><tr><td>Shounenai</td><td>耽美</td></tr><tr><td>Slash (n.)</td><td>耽美同人</td></tr><tr><td>Original Slash</td><td>原耽</td></tr><tr><td>Femslash (n.)</td><td>百合同人</td></tr><tr><td>Pre-slash</td><td>友人以上恋人未满男男</td></tr><tr><td>RPS</td><td>真人耽美同人</td></tr><tr><td>RPF</td><td>真人同人</td></tr><tr><td>Het</td><td>BG同人</td></tr><tr><td>Gen</td><td>无CP同人</td></tr><tr><td>Doodle</td><td>涂鸦</td></tr><tr><td>Scratch</td><td>素描</td></tr><tr><td>Drabble</td><td>口嗨；随笔</td></tr><tr><td>Crack (Fic)</td><td>恶搞（文）</td></tr><tr><td>Curtainfic</td><td>日常文</td></tr><tr><td>Vignette</td><td>小品文</td></tr><tr><td>Crossover</td><td>跨作品联动</td></tr><tr><td>Big Bang</td><td>文画接力</td></tr><tr><td>Canon</td><td>原作向</td></tr><tr><td>Fanon</td><td>同人向</td></tr><tr><td>Headcanon</td><td>脑补</td></tr><tr><td>Spoiler</td><td>剧透</td></tr><tr><td>Squick</td><td>可能令人反感（的东西）</td></tr><tr><td>Angst</td><td>虐向</td></tr><tr><td>Fluff (n.)</td><td>甜饼</td></tr><tr><td>Fluffy (adj.)</td><td>轻松向</td></tr><tr><td>H&#x2F;C</td><td>救赎向</td></tr><tr><td>Smut</td><td>含H</td></tr><tr><td>PWP</td><td>纯H</td></tr><tr><td>Canon Divergence</td><td>修改原著设定</td></tr><tr><td>Not Canon Compliant</td><td>修改原著设定</td></tr><tr><td>EWE</td><td>无视原著结尾</td></tr><tr><td>Cick Bait</td><td>标题党</td></tr><tr><td>(Char) POV</td><td>（某角色的）视角</td></tr><tr><td>WIP</td><td>更新中</td></tr><tr><td>Oneshot</td><td>一发完结</td></tr><tr><td>No Beta</td><td>未校对</td></tr><tr><td>Abandoned (Fic)</td><td>弃坑（文）</td></tr><tr><td>SI</td><td>作者入文</td></tr><tr><td>A&#x2F;N</td><td>作者注</td></tr></tbody></table><br><h2 id="4-角色定位篇"><a href="#4-角色定位篇" class="headerlink" title="4. 角色定位篇"></a>4. 角色定位篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Chibi (Char)</td><td>Q版（人物）</td></tr><tr><td>OOC</td><td>和原作人格有出入</td></tr><tr><td>Oblivious xxx</td><td>对另一方暗恋自己毫不知情的（角色）</td></tr><tr><td>Switch (Char)</td><td>攻受皆可的（角色）</td></tr><tr><td>Bashing (Char)</td><td>黑化 &#x2F; 丑化（角色）</td></tr><tr><td>Woobie</td><td>可怜宝宝</td></tr><tr><td>Doom Magenet</td><td>天煞孤星</td></tr><tr><td>Red Shirt</td><td>炮灰</td></tr><tr><td>Himbo</td><td>笨蛋帅哥猛男</td></tr><tr><td>Cinnamon Roll</td><td>软萌小天使</td></tr><tr><td>Edgelord</td><td>中二黑深残</td></tr><tr><td>Mermaid</td><td>美人鱼</td></tr><tr><td>Merman</td><td>美男鱼</td></tr><tr><td>Incubus</td><td>淫魔</td></tr><tr><td>Elf</td><td>小精灵</td></tr><tr><td>Werecat</td><td>猫人</td></tr></tbody></table><br><h2 id="5-情感关系篇"><a href="#5-情感关系篇" class="headerlink" title="5. 情感关系篇"></a>5. 情感关系篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Top &#x2F; Seme</td><td>攻</td></tr><tr><td>Bottom &#x2F; Uke</td><td>受</td></tr><tr><td>Versatile &#x2F; Seke</td><td>可攻可受</td></tr><tr><td>Service Top</td><td>耕地型攻</td></tr><tr><td>Flip</td><td>互攻</td></tr><tr><td>Dom</td><td>支配者</td></tr><tr><td>Sub</td><td>服从者</td></tr><tr><td>Vanilla</td><td>纯爱</td></tr><tr><td>Cuckolding</td><td>牛头人</td></tr><tr><td>Threesomes</td><td>三人行</td></tr><tr><td>NTR</td><td>被横刀夺爱</td></tr><tr><td>419</td><td>一夜情</td></tr><tr><td>Slow Burn</td><td>慢热型（恋爱）</td></tr><tr><td>Mutual Pining</td><td>双向暗恋</td></tr><tr><td>Long-distance Relationships</td><td>异地恋</td></tr><tr><td>Enemies with Benefits</td><td>宿敌但炮友</td></tr><tr><td>Exes to Lovers</td><td>破镜重圆</td></tr><tr><td>Incest</td><td>骨科</td></tr><tr><td>Idiots in Love</td><td>恋爱脑</td></tr><tr><td>Toxic (Relationships)</td><td>不健康的（关系）</td></tr><tr><td>Established (Relationships)</td><td>已经确认的（关系）</td></tr><tr><td>Flirting</td><td>调情</td></tr></tbody></table><br><h2 id="6-分级篇"><a href="#6-分级篇" class="headerlink" title="6. 分级篇"></a>6. 分级篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>NSFW</td><td>限制级内容</td></tr><tr><td>General Audience</td><td>全年龄向；清水（文）</td></tr><tr><td>Mature</td><td>成人向；少量脏话&#x2F;暴力&#x2F;血腥</td></tr><tr><td>Explicit</td><td>露骨描写</td></tr><tr><td>Dead Dove: Do Not Eat</td><td>重口慎入</td></tr></tbody></table><h3 id="柑橘分级法："><a href="#柑橘分级法：" class="headerlink" title="# 柑橘分级法："></a># 柑橘分级法：</h3><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Orange</td><td>橙子-清水级</td></tr><tr><td>Lime</td><td>青柠-暧昧级</td></tr><tr><td>Lemon</td><td>柠檬-H级</td></tr><tr><td>Grapefruit</td><td>西柚-微重口H级</td></tr><tr><td>Pineapple</td><td>菠萝-重口级</td></tr></tbody></table><br><h2 id="7-性癖篇"><a href="#7-性癖篇" class="headerlink" title="7. 性癖篇"></a>7. 性癖篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Non-Con</td><td>强制性爱 &#x2F; 强上</td></tr><tr><td>Dub-Con</td><td>半强制性爱</td></tr><tr><td>Mpreg</td><td>男性怀孕</td></tr><tr><td>Overdose</td><td>服药过量</td></tr><tr><td>Genderswap</td><td>性转</td></tr><tr><td>Gender Bends</td><td>性转</td></tr><tr><td>Transgender</td><td>跨性别</td></tr><tr><td>Hermaphrodites</td><td>双性</td></tr><tr><td>Creature</td><td>人外</td></tr><tr><td>Whump</td><td>战损</td></tr><tr><td>Fetish</td><td>恋物癖</td></tr></tbody></table><br><h2 id="8-设定篇"><a href="#8-设定篇" class="headerlink" title="8. 设定篇"></a>8. 设定篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Alpha&#x2F;Beta&#x2F;Omega Dynamics</td><td>ABO设定</td></tr><tr><td>Sentiniel-Guide AU</td><td>哨兵向导设定</td></tr><tr><td>BDSM</td><td>BDSM设定</td></tr><tr><td>Hanahaki Disease</td><td>花吐症</td></tr><tr><td>Soulmates AU</td><td>灵魂伴侣设定</td></tr></tbody></table><br><h2 id="9-ABO设定篇"><a href="#9-ABO设定篇" class="headerlink" title="9. ABO设定篇"></a>9. ABO设定篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Dynamic (n.)</td><td>第二性别（即ABO）</td></tr><tr><td>Heat</td><td>Omega发情期</td></tr><tr><td>Rut</td><td>Alpha易感期</td></tr><tr><td>Mating Bites</td><td>标记</td></tr><tr><td>Knotting</td><td>成结</td></tr><tr><td>Touch-Starved</td><td>Omega身体接触饥渴症</td></tr><tr><td>Deprivation</td><td>Omega身体接触饥渴症</td></tr><tr><td>Scent</td><td>信息素</td></tr><tr><td>Womb</td><td>生殖腔</td></tr><tr><td>Inhibitor</td><td>抑制剂</td></tr><tr><td>Suppressant</td><td>抑制剂</td></tr><tr><td>Differentiation</td><td>分化</td></tr><tr><td>Bonding Fever</td><td>结合热</td></tr><tr><td>Gland</td><td>腺体</td></tr><tr><td>Scent Blocker</td><td>信息素阻隔剂</td></tr><tr><td>Pack Dynamics</td><td>群狼设定ABO</td></tr></tbody></table><br><h2 id="10-哨兵向导设定篇"><a href="#10-哨兵向导设定篇" class="headerlink" title="10. 哨兵向导设定篇"></a>10. 哨兵向导设定篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>Sentinel</td><td>哨兵</td></tr><tr><td>Guide</td><td>向导</td></tr><tr><td>Matchmaker</td><td>媒介人</td></tr><tr><td>Awakening</td><td>觉醒</td></tr><tr><td>Sanctuary</td><td>圣所</td></tr><tr><td>Mind-scope</td><td>精神图景</td></tr><tr><td>Mind-guide</td><td>精神向导</td></tr><tr><td>Pheromone</td><td>信息素</td></tr><tr><td>Bonding Heat</td><td>结合热</td></tr><tr><td>Pills</td><td>小白片，向导素</td></tr><tr><td>Shield</td><td>屏障</td></tr><tr><td>Rite</td><td>仪式</td></tr><tr><td>Fugue</td><td>神游</td></tr><tr><td>Feral</td><td>狂化</td></tr><tr><td>Chaos</td><td>混沌</td></tr><tr><td>The Well</td><td>井；灵魂黑洞</td></tr><tr><td>The Tower</td><td>塔</td></tr></tbody></table><br><h2 id="11-特殊名词篇"><a href="#11-特殊名词篇" class="headerlink" title="11. 特殊名词篇"></a>11. 特殊名词篇</h2><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>PDA</td><td>秀恩爱</td></tr><tr><td>Banter</td><td>打嘴仗</td></tr></tbody></table><br><h2 id="※-部分术语解释说明"><a href="#※-部分术语解释说明" class="headerlink" title="※ 部分术语解释说明"></a>※ 部分术语解释说明</h2><ul><li><p><code>Paro</code> 和 <code>AU</code> 区别在于，<code>Paro</code> 仅指借用其他作者的设定，但 <code>AU</code> 也可以是被广泛认可、来源未知的设定。另外，Parody 有时也表示恶搞。</p></li><li><p><code>Tribe</code> 指被同人圈广泛接受的设定，比如 ABO。</p></li><li><p><code>BMF</code>：在圈中有话语权的人。</p></li><li><p><code>Lurker</code>：不点赞不评论只默默看作品的读者。</p></li><li><p><code>TPTB</code>：全称 <code>The Powers That Be</code>。指的是原著作者、电视台或电影公司。</p></li><li><p><code>Jossed</code>：同人作品中基于先前官方原著所产生的一系列设定、背景、情节被后来的官方作品推翻。</p></li><li><p><code>Kripked</code>：同人设定与官方作品后续所出设定符合（被收编&#x2F;恰好符合）。</p></li><li><p><code>Slash</code>：Slash原本是标点符号“&#x2F;”，因为用作分隔CP两角色的符号，后来就有“耽美同人”的意思。</p></li><li><p><code>Big Bang</code>：一种特殊的作者和画师合作的同人创作挑战。作者会创作长篇小说（最低10000字），由画师为其画画。</p></li><li><p><code>Fanon</code>：由原作衍生脑补，后被圈内广泛默认的设定。</p></li><li><p><code>No Beta</code>：常见用法是“No beta we die like men”“No Beta Read”。这里的Beta指帮忙校对的读者。</p></li><li><p><code>SI</code>：全称 <code>Self-Insert</code>。指作者带入到文中的某个原创角色中影响剧情。</p></li><li><p><code>Flip</code>：互攻。尤指在同一场性爱中互攻。</p></li><li><p><code>Vanilla</code>：纯爱关系。强调温和有爱的相处方式。</p></li><li><p><code>NSFW</code>：全称 <code>Not Safe For Work</code>。限制级内容不止H，还包括违法犯罪、暴力血腥等内容。</p></li><li><p><code>The Citrus Scale</code>（柑橘分级法）具体分类如下：</p><ul><li><p><code>Orange</code>：包含亲吻、拥抱、爱抚等较为亲密的互动，但并没有H的迹象；</p></li><li><p><code>Lime</code>：包含轻微暗示和进一步暧昧举动，充满张力，但不会明确描写H行为；</p></li><li><p><code>Lemon</code>：源于肉番《乳霜柠檬》，现指有明确、直白H描写的肉文，衍生的<code>lemonade</code>则是指含肉的小甜文；</p></li><li><p><code>Grapefruit</code>：在一些圈子里指比柠檬级别更激烈或猎奇的肉，可能包含一些非主流或极端的性癖；</p></li><li><p><code>Pineapple</code>：源于涩涩动画公司 Pink Pineapple，在小众圈指性癖极猎奇的肉。</p></li></ul></li><li><p><code>Non-Con</code>：全称 <code>Non-Consensual</code>，直译是“未经同意的（性爱）”，指一方不情愿，但另一方却强制与其发生关系的情节，经常和 <code>Rape</code> 一起出现。</p></li><li><p><code>Dub-Con</code>：全称 <code>Dubius-Consensual</code>，指一方表面上并未明确拒绝，但也没有明确同意，甚至可能是被动接受、神智不清或受形势所迫而顺从。</p></li><li><p><code>Touch-Starved</code>&#x2F;<code>Deprivation</code>：在ABO世界观中，指omega长时间没有和alpha接触，因生理需求没有被满足而生的病。</p></li><li><p><code>Matchmaker</code>：在哨兵向导世界观中，媒介人多为能力出众的、结合过的向导担任，负责评估哨兵与向导的能力，并结合各方信息选择出适合对方的搭档配对牵线搭桥。</p></li><li><p><code>Sanctuary</code>：在哨兵向导世界观中，隶属于塔管辖范围的机构，负责寻找正在觉醒的哨兵或向导，并将他们集合起来进行系统的培训教育。</p></li><li><p><code>Pills</code>：在哨兵向导世界观中，特指向导素，模拟向导散发出的信息素制成的特殊药物。</p></li><li><p><code>Shield</code>：在哨兵向导世界观中，指哨兵与向导用来保护自己免受外界感官或情绪侵袭的精神壁垒。</p></li><li><p><code>Rite</code>：在哨兵向导世界观中，仪式包括结合仪式（与伴侣结合）与告别仪式（告别塔和工作）。</p></li></ul><br><h2 id="※-References"><a href="#※-References" class="headerlink" title="※ References"></a>※ References</h2><p><a href="https://mowenfeiming.github.io/post/note/slash/slash-glossary/">opengoal - 西方同人术语汇集(Slash Glossary)</a></p><p><a href="https://m.bilibili.com/opus/557943799670977088">Bilibili - 英语同人术语整理分享-Fandom Terms in English</a></p><p><a href="https://zhuanlan.zhihu.com/p/234654771?share_code=IW01rqt7v3aS&utm_psn=1937238605715215999">知乎 - 欧美同人圈三大设定考</a></p><p><a href="https://m.douban.com/group/topic/208078952/">豆瓣 - 学术｜分享和同人文&#x2F;cp有关的用法 </a></p><p><a href="https://www.douban.com/note/722151471/?_i=6228722nFKFBLm">豆瓣 - 11. “哨兵-向导”设定（sentinel-guide trope）</a></p><p><a href="http://xhslink.com/m/5lyT943s37K">小红书 - ao3学英语｜一期tag讲解汇总</a></p><p><a href="http://xhslink.com/m/AZ6bXWkQe6Z">小红书 - AO3常见tag解释</a></p><p><a href="http://xhslink.com/m/6ZmYRHhJkfB">小红书 - 欧米同人圈用词查询第一期</a></p><p><a href="http://xhslink.com/m/1sXhGBGbK1">小红书 - 动漫圈英文网络用语🔥留学二次元必看</a></p><p><a href="http://xhslink.com/m/7mbZqomO4xE">小红书 - 同人文里的英文缩写到底是啥意思！！！</a></p><p><a href="http://xhslink.com/m/27uL11swvUy">小红书 - 肉文的英文是Meaty Fiction吗？</a></p><p><a href="http://xhslink.com/m/1smaMFKnPzl">小红书 - 醒脾的英文是…？</a></p><p><a href="http://xhslink.com/m/21VyyamrDR2">小红书 - 我推的英文是…？</a></p><p><a href="http://xhslink.com/m/zr9DYR61ev">小红书 - 美强惨的英文是…？</a></p>]]></content>
    
    
    <categories>
      
      <category>存档</category>
      
      <category>同人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>同人</tag>
      
      <tag>翻译</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将缓动函数引入RMMZ</title>
    <link href="/2025/08/26/%E5%B0%86%E7%BC%93%E5%8A%A8%E5%87%BD%E6%95%B0%E5%BC%95%E5%85%A5RMMZ/"/>
    <url>/2025/08/26/%E5%B0%86%E7%BC%93%E5%8A%A8%E5%87%BD%E6%95%B0%E5%BC%95%E5%85%A5RMMZ/</url>
    
    <content type="html"><![CDATA[<h1 id="将缓动函数引入RMMZ"><a href="#将缓动函数引入RMMZ" class="headerlink" title="将缓动函数引入RMMZ"></a>将缓动函数引入RMMZ</h1><p>MV版本也可用。建议保存成插件。</p><p>这些函数其实上<a href="https://easings.net/">官网</a>也可以查到，但为图方便，索性整理到一起了。</p><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* </span><br><span class="hljs-comment">缓动函数参考: https://easings.net</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Easings.EASING_FUCTION(帧变量, 初始值, 变化量总数, 时长)</span><br><span class="hljs-comment">- 写在update函数里。根据帧变量返回缓动的位置数值。</span><br><span class="hljs-comment">e.g.</span><br><span class="hljs-comment">picture.x = Easings.easeLinear(this._frameCount, 0, 300, 600)</span><br><span class="hljs-comment">- 随着this._frameCount每帧+1，图片的X坐标从0开始，以easeLinear的缓动变化方式，在600帧(10秒)内向右移动300像素。</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">Easings</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;This is a static class&#x27;</span>);<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeLinear</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * t / d + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInQuad</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * (t /= d) * t + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutQuad</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> -c * (t /= d) * (t - <span class="hljs-number">2</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutQuad</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * t * t + b;<br>    <span class="hljs-keyword">return</span> -c / <span class="hljs-number">2</span> * ((--t) * (t - <span class="hljs-number">2</span>) - <span class="hljs-number">1</span>) + b; <br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInSine</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> -c * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(t / d * (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">2</span>)) + c + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutSine</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(t / d * (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">2</span>)) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutSine</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> -c / <span class="hljs-number">2</span> * (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> * t / d) - <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInExpo</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> (t == <span class="hljs-number">0</span>) ? b : c * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">10</span> * (t / d - <span class="hljs-number">1</span>)) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutExpo</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> (t == d) ? b + c : c * (-<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, -<span class="hljs-number">10</span> * t / d) + <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutExpo</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> (t == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> b;<br>    <span class="hljs-keyword">if</span> (t == d) <span class="hljs-keyword">return</span> b + c;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">10</span> * (t - <span class="hljs-number">1</span>)) + b;<br>    <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * (-<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, -<span class="hljs-number">10</span> * --t) + <span class="hljs-number">2</span>) + b; <br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInCirc</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> -c * (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(<span class="hljs-number">1</span> - (t /= d) * t) - <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutCirc</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(<span class="hljs-number">1</span> - (t = t / d - <span class="hljs-number">1</span>) * t) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutCirc</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> -c / <span class="hljs-number">2</span> * (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(<span class="hljs-number">1</span> - t * t) - <span class="hljs-number">1</span>) + b;<br>    <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(<span class="hljs-number">1</span> - (t -= <span class="hljs-number">2</span>) * t) + <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInCubic</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * (t /= d) * t * t + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutCubic</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * ((t = t / d - <span class="hljs-number">1</span>) * t * t + <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutCubic</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * t * t * t + b;<br>    <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * ((t -= <span class="hljs-number">2</span>) * t * t + <span class="hljs-number">2</span>) + b; <br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInQuart</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * (t /= d) * t * t * t + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutQuart</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> -c * ((t = t / d - <span class="hljs-number">1</span>) * t * t * t - <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutQuart</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * t * t * t * t + b;<br>    <span class="hljs-keyword">return</span> -c / <span class="hljs-number">2</span> * ((t -= <span class="hljs-number">2</span>) * t * t * t - <span class="hljs-number">2</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInQuint</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * (t /= d) * t * t * t * t + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutQuint</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c * ((t = t / d - <span class="hljs-number">1</span>) * t * t * t * t + <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutQuint</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * t * t * t * t * t + b;<br>    <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * ((t -= <span class="hljs-number">2</span>) * t * t * t * t + <span class="hljs-number">2</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInElastic</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">var</span> s = <span class="hljs-number">1.70158</span>;<br>    <span class="hljs-keyword">var</span> p = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">var</span> a = c;<br>    <span class="hljs-keyword">if</span> (t == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> b;<br>    <span class="hljs-keyword">if</span> ((t /= d) == <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> b + c;<br>    <span class="hljs-keyword">if</span> (!p) p = d * <span class="hljs-number">0.3</span>;<br>    <span class="hljs-keyword">if</span> (a &lt; <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(c)) &#123;<br>        a = c;<br>        s = p / <span class="hljs-number">4</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> s = p / (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">asin</span>(c / a);<br>    <span class="hljs-keyword">return</span> -(a * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">10</span> * (t -= <span class="hljs-number">1</span>)) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>((t * d - s) * (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / p)) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutElastic</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">var</span> s = <span class="hljs-number">1.70158</span>;<br>    <span class="hljs-keyword">var</span> p = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">var</span> a = c;<br>    <span class="hljs-keyword">if</span> (t == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> b;<br>    <span class="hljs-keyword">if</span> ((t /= d) == <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> b + c;<br>    <span class="hljs-keyword">if</span> (!p) p = d * <span class="hljs-number">0.3</span>;<br>    <span class="hljs-keyword">if</span> (a &lt; <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(c)) &#123;<br>        a = c;<br>        s = p / <span class="hljs-number">4</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> s = p / (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">asin</span>(c / a);<br>    <span class="hljs-keyword">return</span> a * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, -<span class="hljs-number">10</span> * t) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>((t * d - s) * (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / p) + c + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutElastic</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">var</span> s = <span class="hljs-number">1.70158</span>;<br>    <span class="hljs-keyword">var</span> p = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">var</span> a = c;<br>    <span class="hljs-keyword">if</span> (t == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> b;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) == <span class="hljs-number">2</span>) <span class="hljs-keyword">return</span> b + c;<br>    <span class="hljs-keyword">if</span> (!p) p = d * (<span class="hljs-number">0.3</span> * <span class="hljs-number">1.5</span>);<br>    <span class="hljs-keyword">if</span> (a &lt; <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(c)) &#123;<br>        a = c;<br>        s = p / <span class="hljs-number">4</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> s = p / (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">asin</span>(c / a);<br>    <span class="hljs-keyword">if</span> (t &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> -<span class="hljs-number">.5</span> * (a * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">10</span> * (t -= <span class="hljs-number">1</span>)) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>((t * d - s) * (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / p)) + b;<br>    <span class="hljs-keyword">return</span> a * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>, -<span class="hljs-number">10</span> * (t -= <span class="hljs-number">1</span>)) * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>((t * d - s) * (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / p) * <span class="hljs-number">.5</span> + c + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInBack</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> (s == <span class="hljs-literal">undefined</span>) s = <span class="hljs-number">1.70158</span>;<br>    <span class="hljs-keyword">return</span> c * (t /= d) * t * ((s + <span class="hljs-number">1</span>) * t - s) + b; <br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutBack</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> (s == <span class="hljs-literal">undefined</span>) s = <span class="hljs-number">1.70158</span>;<br>    <span class="hljs-keyword">return</span> c * ((t = t / d - <span class="hljs-number">1</span>) * t * ((s + <span class="hljs-number">1</span>) * t + s) + <span class="hljs-number">1</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutBack</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> (s == <span class="hljs-literal">undefined</span>) s = <span class="hljs-number">1.70158</span>;<br>    <span class="hljs-keyword">if</span> ((t /= d / <span class="hljs-number">2</span>) &lt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * (t * t * (((s *= (<span class="hljs-number">1.525</span>)) + <span class="hljs-number">1</span>) * t - s)) + b;<br>    <span class="hljs-keyword">return</span> c / <span class="hljs-number">2</span> * ((t -= <span class="hljs-number">2</span>) * t * (((s *= (<span class="hljs-number">1.525</span>)) + <span class="hljs-number">1</span>) * t + s) + <span class="hljs-number">2</span>) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInBounce</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">return</span> c - <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">easeOutBounce</span>(d - t, <span class="hljs-number">0</span>, c, d) + b;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeOutBounce</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> ((t/=d) &lt; (<span class="hljs-number">1</span>/<span class="hljs-number">2.75</span>)) &#123;<br>      <span class="hljs-keyword">return</span> c*(<span class="hljs-number">7.5625</span>*t*t) + b;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (t &lt; (<span class="hljs-number">2</span>/<span class="hljs-number">2.75</span>)) &#123;<br>      <span class="hljs-keyword">return</span> c*(<span class="hljs-number">7.5625</span>*(t-=(<span class="hljs-number">1.5</span>/<span class="hljs-number">2.75</span>))*t + <span class="hljs-number">.75</span>) + b;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (t &lt; (<span class="hljs-number">2.5</span>/<span class="hljs-number">2.75</span>)) &#123;<br>      <span class="hljs-keyword">return</span> c*(<span class="hljs-number">7.5625</span>*(t-=(<span class="hljs-number">2.25</span>/<span class="hljs-number">2.75</span>))*t + <span class="hljs-number">.9375</span>) + b;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> c*(<span class="hljs-number">7.5625</span>*(t-=(<span class="hljs-number">2.625</span>/<span class="hljs-number">2.75</span>))*t + <span class="hljs-number">.984375</span>) + b;<br>    &#125;<br>&#125;;<br><br><span class="hljs-title class_">Easings</span>.<span class="hljs-property">easeInOutBounce</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, b, c, d</span>) &#123;<br>    <span class="hljs-keyword">if</span> (t &lt; d/<span class="hljs-number">2</span>) <span class="hljs-keyword">return</span> <span class="hljs-title function_">easeInBounce</span> (t*<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, c, d) * <span class="hljs-number">.5</span> + b;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">easeOutBounce</span> (t*<span class="hljs-number">2</span>-d, <span class="hljs-number">0</span>, c, d) * <span class="hljs-number">.5</span> + c*<span class="hljs-number">.5</span> + b;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>存档</category>
      
      <category>RM开发</category>
      
      <category>插件脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RMMZ</tag>
      
      <tag>代码</tag>
      
      <tag>RMMV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bitmap圆角矩形</title>
    <link href="/2025/08/26/Bitmap%E7%B1%BB%E6%89%A9%E5%B1%95-%E7%BB%98%E5%88%B6%E5%9C%86%E8%A7%92%E7%9F%A9%E5%BD%A2/"/>
    <url>/2025/08/26/Bitmap%E7%B1%BB%E6%89%A9%E5%B1%95-%E7%BB%98%E5%88%B6%E5%9C%86%E8%A7%92%E7%9F%A9%E5%BD%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="Bitmap类扩展-圆角矩形"><a href="#Bitmap类扩展-圆角矩形" class="headerlink" title="Bitmap类扩展 - 圆角矩形"></a>Bitmap类扩展 - 圆角矩形</h1><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">Bitmap.strokeRoundRect(</span><br><span class="hljs-comment">    x, y, width, height, radius, color</span><br><span class="hljs-comment">)</span><br><span class="hljs-comment">- 绘制出圆角矩形的轮廓</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Bitmap.fillRoundRect(</span><br><span class="hljs-comment">    x, y, width, height, radius, color</span><br><span class="hljs-comment">)</span><br><span class="hljs-comment">- 填充出圆角矩形</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Bitmap.gradientFillRoundRect(</span><br><span class="hljs-comment">    x, y, width, height, radius, color1, color2, vertical</span><br><span class="hljs-comment">)</span><br><span class="hljs-comment">- 以渐变色填充出圆角矩形</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-title class_">Bitmap</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">strokeRoundRect</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">x, y, width, height, radius, color</span>) &#123;<br>    <span class="hljs-keyword">const</span> context = <span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>;<br>    context.<span class="hljs-property">fillStyle</span> = color;<br>    context.<span class="hljs-property">strokeStyle</span> = color;<br>    context.<span class="hljs-title function_">beginPath</span>();<br>    context.<span class="hljs-title function_">moveTo</span>(x + radius, y);<br>    context.<span class="hljs-title function_">lineTo</span>(x + width - radius, y);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x + width, y, x + width, y + radius);<br>    context.<span class="hljs-title function_">lineTo</span>(x + width, y + height - radius);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x + width, y + height, x + width - radius, y + height);<br>    context.<span class="hljs-title function_">lineTo</span>(x + radius, y + height);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x, y + height, x, y + height - radius);<br>    context.<span class="hljs-title function_">lineTo</span>(x, y + radius);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x, y, x + radius, y);<br>    context.<span class="hljs-title function_">closePath</span>();<br>    context.<span class="hljs-title function_">stroke</span>();<br>&#125;;<br><br><span class="hljs-title class_">Bitmap</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">fillRoundRect</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">x, y, width, height, radius, color</span>) &#123;<br>    <span class="hljs-keyword">const</span> context = <span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>;<br>    context.<span class="hljs-property">fillStyle</span> = color;<br>    context.<span class="hljs-title function_">beginPath</span>();<br>    context.<span class="hljs-title function_">moveTo</span>(x + radius, y);<br>    context.<span class="hljs-title function_">lineTo</span>(x + width - radius, y);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x + width, y, x + width, y + radius);<br>    context.<span class="hljs-title function_">lineTo</span>(x + width, y + height - radius);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x + width, y + height, x + width - radius, y + height);<br>    context.<span class="hljs-title function_">lineTo</span>(x + radius, y + height);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x, y + height, x, y + height - radius);<br>    context.<span class="hljs-title function_">lineTo</span>(x, y + radius);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x, y, x + radius, y);<br>    context.<span class="hljs-title function_">closePath</span>();<br>    context.<span class="hljs-title function_">fill</span>();<br>&#125;;<br><br><span class="hljs-title class_">Bitmap</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">gradientFillRoundRect</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span><br><span class="hljs-params">    x, y, width, height, radius, color1, color2, vertical</span><br><span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> context = <span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>;<br>    <span class="hljs-keyword">const</span> x1 = vertical ? x : x + width;<br>    <span class="hljs-keyword">const</span> y1 = vertical ? y + height : y;<br>    <span class="hljs-keyword">const</span> grad = context.<span class="hljs-title function_">createLinearGradient</span>(x, y, x1, y1);<br>    grad.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">0</span>, color1);<br>    grad.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">1</span>, color2);<br>    context.<span class="hljs-title function_">save</span>();<br>    context.<span class="hljs-property">fillStyle</span> = grad;<br>    context.<span class="hljs-title function_">beginPath</span>();<br>    context.<span class="hljs-title function_">moveTo</span>(x + radius, y);<br>    context.<span class="hljs-title function_">lineTo</span>(x + width - radius, y);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x + width, y, x + width, y + radius);<br>    context.<span class="hljs-title function_">lineTo</span>(x + width, y + height - radius);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x + width, y + height, x + width - radius, y + height);<br>    context.<span class="hljs-title function_">lineTo</span>(x + radius, y + height);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x, y + height, x, y + height - radius);<br>    context.<span class="hljs-title function_">lineTo</span>(x, y + radius);<br>    context.<span class="hljs-title function_">quadraticCurveTo</span>(x, y, x + radius, y);<br>    context.<span class="hljs-title function_">closePath</span>();<br>    context.<span class="hljs-title function_">fill</span>();<br>    context.<span class="hljs-title function_">restore</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_baseTexture</span>.<span class="hljs-title function_">update</span>();<br>&#125;;<br></code></pre></td></tr></table></figure><br><p>使用实例：</p><br><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 将窗口选项的背景形状从矩形改为圆角矩形 */</span><br><br><span class="hljs-title class_">Window</span>_Selectable.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">drawBackgroundRect</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">rect</span>) &#123;<br>    <span class="hljs-keyword">const</span> c1 = <span class="hljs-title class_">ColorManager</span>.<span class="hljs-title function_">itemBackColor1</span>();<br>    <span class="hljs-keyword">const</span> c2 = <span class="hljs-title class_">ColorManager</span>.<span class="hljs-title function_">itemBackColor2</span>();<br>    <span class="hljs-keyword">const</span> x = rect.<span class="hljs-property">x</span>;<br>    <span class="hljs-keyword">const</span> y = rect.<span class="hljs-property">y</span>;<br>    <span class="hljs-keyword">const</span> w = rect.<span class="hljs-property">width</span>;<br>    <span class="hljs-keyword">const</span> h = rect.<span class="hljs-property">height</span>;<br>    <span class="hljs-keyword">const</span> radius = <span class="hljs-number">5</span>;  <span class="hljs-comment">// 圆角矩形的半径</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">contentsBack</span>.<span class="hljs-title function_">gradientFillRoundRect</span>(x, y, w, h, radius, c1, c2, <span class="hljs-literal">true</span>);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">contentsBack</span>.<span class="hljs-title function_">gradientFillRoundRect</span>(x, y, w, h, radius, c1);<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>存档</category>
      
      <category>RM开发</category>
      
      <category>插件脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RMMZ</tag>
      
      <tag>代码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RMMZ插件开发通用代码片段</title>
    <link href="/2025/08/26/RMMV-RMMZ%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E9%80%9A%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/"/>
    <url>/2025/08/26/RMMV-RMMZ%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E9%80%9A%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="RMMZ插件开发时开箱即用的代码片段"><a href="#RMMZ插件开发时开箱即用的代码片段" class="headerlink" title="RMMZ插件开发时开箱即用的代码片段"></a>RMMZ插件开发时开箱即用的代码片段</h1><p>存档。</p><h2 id="1-新增控制字符："><a href="#1-新增控制字符：" class="headerlink" title="1. 新增控制字符："></a>1. 新增控制字符：</h2><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> __Window_Message_processEscapeCharacter = <span class="hljs-title class_">Window</span>_Message.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">processEscapeCharacter</span>;<br><span class="hljs-title class_">Window</span>_Message.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">processEscapeCharacter</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">code, textState</span>) &#123;<br>    <span class="hljs-keyword">switch</span>(code) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;ECA&#x27;</span>:<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">processEscapeCodeASpecialState</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">obtainEscapeParam</span>(textState));<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;ECB&#x27;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">999</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-attr">default</span>: <br>            __Window_Message_processEscapeCharacter.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, code, textState);<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><br><h2 id="2-新增-Game-XXX-类（附带-gameXXX，存入存档）"><a href="#2-新增-Game-XXX-类（附带-gameXXX，存入存档）" class="headerlink" title="2. 新增 Game_XXX() 类（附带 $gameXXX，存入存档）"></a>2. 新增 Game_XXX() 类（附带 $gameXXX，存入存档）</h2><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> $gameXXX = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">let</span> __DataManager_createGameObjects = <span class="hljs-title class_">DataManager</span>.<span class="hljs-property">createGameObjects</span>;<br><span class="hljs-title class_">DataManager</span>.<span class="hljs-property">createGameObjects</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    __DataManager_createGameObjects.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>    $gameXXX = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Game</span>_XXX();<br>&#125;;<br><br><span class="hljs-keyword">let</span> __DataManager_makeSaveContents = <span class="hljs-title class_">DataManager</span>.<span class="hljs-property">makeSaveContents</span>;<br><span class="hljs-title class_">DataManager</span>.<span class="hljs-property">makeSaveContents</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> contents = __DataManager_makeSaveContents.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>    contents.<span class="hljs-property">xxx</span> = $gameXXX;<br>    <span class="hljs-keyword">return</span> contents;<br>&#125;;<br><br><span class="hljs-keyword">let</span> __DataManager_extractSaveContents = <span class="hljs-title class_">DataManager</span>.<span class="hljs-property">extractSaveContents</span>;<br><span class="hljs-title class_">DataManager</span>.<span class="hljs-property">extractSaveContents</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">contents</span>) &#123;<br>    __DataManager_extractSaveContents.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, contents);<br>    $gameXXX = contents.<span class="hljs-property">xxx</span>;<br>&#125;;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">Game_XXX</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">initialize</span>(...<span class="hljs-variable language_">arguments</span>);<br>&#125;;<br><br><span class="hljs-title class_">Game</span>_XXX.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">initialize</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// </span><br>&#125;;<br></code></pre></td></tr></table></figure><br><h2 id="3-向地图各层添加-Sprite-实例"><a href="#3-向地图各层添加-Sprite-实例" class="headerlink" title="3. 向地图各层添加 Sprite() 实例"></a>3. 向地图各层添加 Sprite() 实例</h2><h3 id="最底层（地图图块层）："><a href="#最底层（地图图块层）：" class="headerlink" title="最底层（地图图块层）："></a>最底层（地图图块层）：</h3><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> __Spriteset_Base_createPictures = <span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createPictures</span>;<br><span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createPictures</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">createLowerSprite</span>();<br>    __Spriteset_Base_createPictures.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createLowerSprite</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sprite</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">addChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span>);<br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Map.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createLowerSprite</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sprite</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span>.<span class="hljs-property">z</span> = <span class="hljs-number">1</span>; <span class="hljs-comment">// 0 - 远景层，1 - 图块层，3 - 玩家/事件层</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_tilemap</span>.<span class="hljs-title function_">addChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span>);<br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Battle.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createLowerSprite</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sprite</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">updateLowerPictureContainerZ</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span>.<span class="hljs-property">x</span> = -<span class="hljs-variable language_">this</span>.<span class="hljs-property">_battleField</span>.<span class="hljs-property">x</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span>.<span class="hljs-property">y</span> = -<span class="hljs-variable language_">this</span>.<span class="hljs-property">_battleField</span>.<span class="hljs-property">y</span>;<br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Battle.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">updateLowerPictureContainerZ</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_battleField</span>.<span class="hljs-title function_">addChildAt</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_lowerSprite</span>,  <span class="hljs-number">0</span>);<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="中层（图片下方、图片上方）："><a href="#中层（图片下方、图片上方）：" class="headerlink" title="中层（图片下方、图片上方）："></a>中层（图片下方、图片上方）：</h3><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 如果和上一段代码合用，必须在上一段之后书写这一段</span><br><br><span class="hljs-keyword">let</span> __Spriteset_Base_createPictures = <span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createPictures</span>;<br><span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createPictures</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">createBelowPictureSprite</span>(); <span class="hljs-comment">// 图片层之下</span><br>    __Spriteset_Base_createPictures.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">createAbovePictureSprite</span>(); <span class="hljs-comment">// 图片层之上</span><br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createBelowPictureSprite</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_belowPictureSprite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sprite</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">addChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_belowPictureSprite</span>);<br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createAbovePictureSprite</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_abovePictureSprite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sprite</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">addChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_abovePictureSprite</span>);<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="最高层（窗口上方）："><a href="#最高层（窗口上方）：" class="headerlink" title="最高层（窗口上方）："></a>最高层（窗口上方）：</h3><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> __Scene_Base_createWindowLayer = <span class="hljs-title class_">Scene</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createWindowLayer</span>;<br><span class="hljs-title class_">Scene</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createWindowLayer</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    __Scene_Base_createWindowLayer.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_spriteset</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">_spriteset</span>.<span class="hljs-title function_">createUpperSprite</span>(<span class="hljs-variable language_">this</span>);<br>    &#125;<br>&#125;;<br><br><span class="hljs-title class_">Spriteset</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">createUpperSprite</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">parentScene</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_upperSprite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sprite</span>();<br>    parentScene.<span class="hljs-title function_">addChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_upperSprite</span>);<br>&#125;;<br></code></pre></td></tr></table></figure><br><h2 id="4-控制字符接收字符串参数"><a href="#4-控制字符接收字符串参数" class="headerlink" title="4. 控制字符接收字符串参数"></a>4. 控制字符接收字符串参数</h2><figure class="highlight javascript"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Window</span>_Base.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">obtainEscapeString</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">textState</span>) &#123;<br>    <span class="hljs-keyword">const</span> arr = <span class="hljs-regexp">/^\[(.*?)\]/</span>.<span class="hljs-title function_">exec</span>(textState.<span class="hljs-property">text</span>.<span class="hljs-title function_">slice</span>(textState.<span class="hljs-property">index</span>));<br>    <span class="hljs-keyword">if</span>(arr) &#123;<br>        textState.<span class="hljs-property">index</span> += arr[<span class="hljs-number">0</span>].<span class="hljs-property">length</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>(arr[<span class="hljs-number">0</span>].<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>, arr[<span class="hljs-number">0</span>].<span class="hljs-property">length</span> - <span class="hljs-number">1</span>));<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>存档</category>
      
      <category>RM开发</category>
      
      <category>插件脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RMMZ</tag>
      
      <tag>代码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+Netlify搭建&amp;更新个人博客教程</title>
    <link href="/2025/08/26/Hexo-Netlify%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E6%9B%B4%E6%96%B0%E6%96%87%E7%AB%A0%E6%95%99%E7%A8%8B/"/>
    <url>/2025/08/26/Hexo-Netlify%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E6%9B%B4%E6%96%B0%E6%96%87%E7%AB%A0%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<blockquote><p>原教程<a href="https://zhuanlan.zhihu.com/p/39923772">在此</a>。这篇教程精简了原教程的内容，并在其基础上添加了一些额外情况的设置。</p><p>注：以下列出的所有命令前面的 $ 符号表示 macOS 普通用户的命令提示符，Windows 用户在输入命令时不需要输入 $ 。</p></blockquote><br><br><h1 id="Hexo-Netlify搭建-更新个人博客教程"><a href="#Hexo-Netlify搭建-更新个人博客教程" class="headerlink" title="Hexo+Netlify搭建&amp;更新个人博客教程"></a>Hexo+Netlify搭建&amp;更新个人博客教程</h1><p>主要思路：Hexo建站，Github托管代码，Netlify部署。</p><h2 id="I-搭建博客"><a href="#I-搭建博客" class="headerlink" title="I.搭建博客"></a>I.搭建博客</h2><h3 id="一、安装前置"><a href="#一、安装前置" class="headerlink" title="一、安装前置"></a>一、安装前置</h3><ol><li><p><strong>安装 Node.js</strong></p><p>访问<a href="https://www.nodejs.com.cn/download.html">Node.js官网</a>，下载长期维护版的安装包，随后根据指引安装。</p></li><li><p><strong>安装 Git</strong></p><p>访问<a href="https://www.nodejs.com.cn/download.html">Git官网</a>，下载安装包并按部就班安装。</p></li><li><p><strong>注册Github账号</strong></p><p>访问<a href="https://github.com/">Github官网</a>，用邮箱注册一个Github账号。记住注册所用的邮箱和账号的用户名。</p></li><li><p><strong>注册Netlify账号</strong></p><p>访问<a href="https://www.netlify.com/">Netlify官网</a>注册一个账号。</p></li><li><p><strong>安装 Hexo</strong></p><p>调出命令提示符&#x2F;打开终端，输入npm命令安装Hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>安装完成后可以输入以下命令检查是否安装妥当：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo -v<br></code></pre></td></tr></table></figure><p>如能显示hexo的版本和npm的版本，即安装成功。</p></li></ol><br><h3 id="二、搭建Hexo"><a href="#二、搭建Hexo" class="headerlink" title="二、搭建Hexo"></a>二、搭建Hexo</h3><ol><li><p><strong>创建Hexo项目</strong></p><p>输入以下命令创建项目文件夹路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init /PATH/TO/hexo<br></code></pre></td></tr></table></figure><p><span id="jump"></span>切换至刚刚创建的文件夹。这里的路径建议为绝对路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> /PATH/TO/hexo<br></code></pre></td></tr></table></figure><p><strong>注意</strong>！如果项目文件夹不在C盘，则输入命令（路径必须为绝对路径，例如 F:\Random\Blog）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> /d /PATH/TO/hexo<br></code></pre></td></tr></table></figure></li><li><p><strong>初始化项目</strong></p><p>运行了刚才的 <code>hexo init</code> 命令，我们的项目文件夹内已经安好了必要组件。现在，通过npm来初始化Hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install<br></code></pre></td></tr></table></figure><p>等待搭建完成。这样，我们的网站就建好了。</p><p>使用以下命令预览我们的网站：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>随后访问命令提示符或终端给出的网址即可预览。网址一般是 <a href="http://localhost:4000/">http://localhost:4000/</a> 或者 <a href="http://0.0.0.0:4000/">http://0.0.0.0:4000/</a> 。</p><p>若要继续设置，在窗口焦点处于命令提示符 &#x2F; 终端时，按 Ctrl+C &#x2F; Command+C 。</p><p>在这之后，可以设置基础参数、安装Hexo主题、撰写新博文。具体操作方法<a href="#II.%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2">见下</a>。</p></li><li><p><strong>建站前最后的准备工作</strong></p><p>清除缓存数据，并为项目生成静态文件用以上传：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br>$ hexo generate<br></code></pre></td></tr></table></figure><p>鉴于我们不需要对网站内容进行版本控制，我们可将该文件夹添加至.gitignore文档中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/public&quot;</span> &gt;&gt; .gitignore<br></code></pre></td></tr></table></figure><p>接下来，我们要将网站内容推送至Github这个代码托管服务上。</p></li></ol><br><h3 id="三、搭建网站"><a href="#三、搭建网站" class="headerlink" title="三、搭建网站"></a>三、搭建网站</h3><ol><li><p><strong>配置Git</strong></p><p>如果是第一次安装Git，那么在使用前，我们首先需要配置Git的基本信息，这些信息包括我们的Github账户用户名和注册邮箱。</p><p>以用户名 <code>YourName</code>，邮箱 <code>YourEmail@example.com</code> 为例，打开命令提示符&#x2F;终端，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global user.name <span class="hljs-string">&quot;YourName&quot;</span><br>$ git config --global user.email <span class="hljs-string">&quot;YourEmail@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>配置好Git之后，可以用以下命令检查是否已成功安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git --version<br></code></pre></td></tr></table></figure></li><li><p><strong><span id="deploy">开始托管</span></strong></p><p>登录Github账号，点击绿色按钮 <code>New</code>（Repository）新建一个仓库。为仓库命名时记住这个名字，后面会用。以下将会以 <code>hexo_netlify</code> 作为示例仓库名。</p><p>注意，不要在 <code>Initialize this repository with a README</code> 前打勾，<code>Add .gitignore</code> 和 <code>Add a license</code> 处请选择 None。</p><p>随后，在命令提示符或终端里切换到项目文件夹（<a href="#jump">方法见此</a>），初始化仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git init<br></code></pre></td></tr></table></figure><p>通过 <code>git add</code> 跟踪指定项目文件，然后执行 <code>git commit</code> 提交：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git add .<br>$ git commit -m <span class="hljs-string">&quot;initial commit&quot;</span><br></code></pre></td></tr></table></figure><p>回到之前我们创建GitHub仓库完成的页面，复制远程仓库链接（一般长这样：<a href="https://github.com/yourName/hexo_netlify.git">https://github.com/yourName/hexo_netlify.git</a> ），在命令控制符&#x2F;终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git remote add origin &lt;远程仓库链接&gt;<br></code></pre></td></tr></table></figure><p>可以用 <code>git remote -v</code> 来验证链接是否正确。</p><p>确认准确无误后，用以下指令推送本地仓库内容至GitHub：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git push origin master<br></code></pre></td></tr></table></figure><p>等待上传完成。</p><p>至此，源代码就全部上传到Github了。接下来我们开始通过Netlify来发布网站。</p></li><li><p><strong>发布网站</strong></p><p>登录Netlify账户，进入<a href="https://app.netlify.com/account/sites">建站页面</a>，点击 <code>New site from Git</code> 进入下一步。</p><p>首先，在第一步里选择 <code>Github</code>，按部就班关联 Github 账户。</p><p>如果是第一次关联两个账户，则点击绿色按钮 <code>Authorize netlify</code> 同意授权Netlify访问GitHub上的仓库内容。</p><p>授权完毕后，页面会跳转回Netlify，来到第二步。在这里选择我们刚才新建的Github仓库。</p><p>然后来到第三步，我们只需将 <code>Build command</code> 参数设置为 <strong>hexo generate</strong> 即可。</p><p>最后，点击 <code>Deploy site</code>，等待构建完成即可。</p><br><p>Netlify会在网站发布成功的同时提供给你一个以 *.netlify.com 为后缀、随机生成的英文名为前缀的子域名。假如你不喜欢Netlify自动生成的子域名，并且还未来得及购买域名，可以通过 <code>Domain settings</code> &gt; <code>Edit site name</code> 来重命名。</p></li></ol><br><br><h2 id="II-更新博客"><a href="#II-更新博客" class="headerlink" title="II.更新博客"></a>II.更新博客</h2><p>包括设置、美化、更新博客的一系列操作。</p><h3 id="一、设置基础参数"><a href="#一、设置基础参数" class="headerlink" title="一、设置基础参数"></a>一、设置基础参数</h3><p>打开项目文件夹，用代码编辑器（推荐 NotePad++ 或者 VS Code）打开 <code>_config.yaml</code> 文件。</p><p>在靠前的部分，我们可以看到以下设置：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"># Site<br><span class="hljs-symbol">title:</span> Hexo<br><span class="hljs-symbol">subtitle:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><span class="hljs-symbol">description:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><span class="hljs-symbol">keywords:</span><br><span class="hljs-symbol">author:</span><br><span class="hljs-symbol">language:</span> en<br><span class="hljs-symbol">timezone:</span> <span class="hljs-comment">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>其中，<code>title</code> 是网站名称，<code>subtitle</code> 是副标题，<code>author</code> 是建站者姓名，<code>language</code> 是网站的语言（简体中文是 zh-CN）。如有需要请自行修改。</p><br><h3 id="二、安装主题"><a href="#二、安装主题" class="headerlink" title="二、安装主题"></a>二、安装主题</h3><ol><li><p><strong>安装</strong></p><p>从Github上搜索并下载心仪的主题，随后根据其介绍页的教程安装。</p><p>通过命令控制符&#x2F;终端安装时，记得先切换至项目文件夹再安装。</p></li><li><p><strong>配置</strong></p><p>打开项目文件夹，用代码编辑器（推荐 NotePad++ 或者 VS Code）打开 <code>_config.yaml</code> 文件。</p><p>搜索关键词“theme”，将默认的 landscape 更改为安装好的主题的名字即可。</p><p>若希望在主题上做进一步的修改，则在项目文件夹根目录中打开名为 _config.[theme-name].yaml 的文件，修改其中的设置即可。</p></li></ol><br><h3 id="三、撰写新内容"><a href="#三、撰写新内容" class="headerlink" title="三、撰写新内容"></a>三、撰写新内容</h3><ol><li><p><strong>撰写新博文</strong></p><ul><li><strong>a. 生成博文文件</strong></li></ul><p>在命令控制符&#x2F;终端里，先切换到项目文件夹下，然后输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;新博文&quot;</span><br></code></pre></td></tr></table></figure><p>这样，在项目文件夹下 source&#x2F;_post&#x2F; 就会出现一个 新博文.md 文件。在这个新生成的 Markdown 文件里接着已经生成的内容撰写博文即可。Markdown 语法见<a href="https://www.runoob.com/markdown/md-tutorial.html">此处</a>。</p><p>如果我们不希望我们的文章发布出去，可以先生成一个草稿。所有草稿内容都不会被发布出来。</p><p>在命令控制符&#x2F;终端里，先切换到项目文件夹下，然后输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new draft <span class="hljs-string">&quot;新博文草稿&quot;</span><br></code></pre></td></tr></table></figure><p>这样，在项目文件夹下 source&#x2F;_draft&#x2F; 就会出现一个 新博文草稿.md 文件。</p><br><ul><li><strong>b. 配置博文</strong></li></ul><p>打开新生成的.md文件后，我们可以看到里面已经有了一些内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">新博文</span><br><span class="hljs-attr">date:</span> <span class="hljs-string">20xx-xx-xx</span> <span class="hljs-string">xx:xx:xx</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>这里的 <code>title</code> 就是博文的标题，<code>date</code> 是发布日期，<code>tags</code> 则是该博文的所属的一系列tag，可以自定义。</p><p>如果想为博文添加多个tag，我们可以这样编辑 <code>tags</code> 字段：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">tags:</span><br>- 标签1<br>- 标签2<br>...<br></code></pre></td></tr></table></figure><p>除了以上默认的三个参数，我们还可以写以下这些参数：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">updated:</span> 更新时间，格式和<span class="hljs-type">date</span>相同<br><span class="hljs-symbol">categories:</span> 所属分类<br><span class="hljs-symbol">excerpt:</span> 文章摘要<br><span class="hljs-symbol">lang:</span> 文章语言<br><span class="hljs-symbol">published:</span> 是否发布<br><span class="hljs-symbol">author:</span> 文章作者<br><span class="hljs-symbol">keywords:</span> 关键词<br><span class="hljs-symbol">description:</span> 文章简介<br></code></pre></td></tr></table></figure><p><strong>※</strong> <code>categories</code> 和 <code>tags</code> 的相同点与区别：</p><ul><li><p>设置 <code>categories</code> 和 <code>tags</code> 时格式几乎一样。<code>categories</code> 也可以这样设置：</p> <figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">categories</span>:<br><span class="hljs-literal">-</span> 类别1<br><span class="hljs-literal">-</span> 类别2<br></code></pre></td></tr></table></figure></li><li><p>然而，<code>categories</code> 可以设置多级结构，<code>tags</code> 不行。例如，<code>categories</code> 可以这样设置：</p> <figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">categories</span>:<br><span class="hljs-literal">-</span> [类别1, 类别2]   // 属于类别1/类别2，类别2是类别1的子类别<br><span class="hljs-literal">-</span> 类别3<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>添加新页面（Page）</strong></p><p>在命令控制符&#x2F;终端里，先切换到项目文件夹下，然后输入命令（例）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new page about<br></code></pre></td></tr></table></figure><p>这样，在项目文件夹下 source&#x2F;about&#x2F; 就会出现一个 index.md 文件。编辑此.md文件即可。</p><p>在我们用 <code>hexo server</code> 预览网站时，访问 .&#x2F;about&#x2F;就可以看到在index.md中编辑的内容了。</p></li></ol><br><h3 id="四、更新博客"><a href="#四、更新博客" class="headerlink" title="四、更新博客"></a>四、更新博客</h3><p>在命令控制符&#x2F;终端里，先切换到项目文件夹下，然后清除旧缓存数据并生成静态页面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br>$ hexo generate<br></code></pre></td></tr></table></figure><p>启用本地服务器预览更新后的网站：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>确认无误后退出预览，开始部署到线上。</p><p>此处基本是重复 I.搭建博客 &gt; 三、搭建网站 &gt; 2.开始托管（<a href="#deploy">点击此处</a>）中的命令操作，但略有不同。</p><p>首先初始化Git，然后通过 <code>git add</code> 跟踪指定项目文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git init<br>$ git add .<br></code></pre></td></tr></table></figure><p>如果记得自己修改、增添、删除了什么文件，也可以直接 add 指定文件。不过这么做比较麻烦。</p><p>然后执行 <code>git commit</code> 提交：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git commit -m <span class="hljs-string">&quot;new post added&quot;</span><br></code></pre></td></tr></table></figure><p>这里的 <code>&quot;new post added&quot;</code> 可以认作是此次更新的更新信息，可自定义。</p><p>最后直接用以下指令推送本地仓库内容至GitHub：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git push origin master<br></code></pre></td></tr></table></figure><p>等待上传完成即可。</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>代码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>碎碎念#1</title>
    <link href="/2025/08/26/%E7%A2%8E%E7%A2%8E%E5%BF%B5-1/"/>
    <url>/2025/08/26/%E7%A2%8E%E7%A2%8E%E5%BF%B5-1/</url>
    
    <content type="html"><![CDATA[<p>在今天迎来了人生第一个真正意义上的博客……感觉还蛮好？Hexo建站原来这么简单。</p><p>之后大概会发点学习心得之类的东西，还有日常碎碎念什么的。一些教程、口嗨（真的会有吗）应该也会发上来，不然内容也太少了（）</p><br><p>对了如果我哪天忘了怎么用Hexo发博客记得看这个教程：</p><p><a href="https://zhuanlan.zhihu.com/p/39923772">https://zhuanlan.zhihu.com/p/39923772</a></p><br><p>更新了在上面这个教程的基础上试错试出来的教程，应该万无一失了吧（</p>]]></content>
    
    
    
    <tags>
      
      <tag>杂项</tag>
      
      <tag>碎碎念</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
